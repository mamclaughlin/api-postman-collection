{
	"info": {
		"_postman_id": "736c008e-3192-47d8-9b5e-101f0257636e",
		"name": "Vultr API",
		"description": "# Introduction\n\nThe Vultr API v2 is a set of HTTP endpoints that adhere to RESTful design principles and CRUD actions with predictable URIs. It uses standard HTTP response codes, authentication, and verbs. The API has consistent and well-formed JSON requests and responses with cursor-based pagination to simplify list handling. Error messages are descriptive and easy to understand. All functions of the Vultr customer portal are accessible via the API, enabling you to script complex unattended scenarios with any tool fluent in HTTP.\n\n## Requests\n\nCommunicate with the API by making an HTTP request at the correct endpoint. The chosen method determines the action taken.\n\n| Method | Usage |\n| ------ | ------------- |\n| DELETE | Use the DELETE method to destroy a resource in your account. If it is not found, the operation will return a 4xx error and an appropriate message. |\n| GET | To retrieve information about a resource, use the GET method. The data is returned as a JSON object. GET methods are read-only and do not affect any resources. |\n| PATCH | Some resources support partial modification with PATCH, which modifies specific attributes without updating the entire object representation. |\n| POST | Issue a POST method to create a new object. Include all needed attributes in the request body encoded as JSON. |\n| PUT | Use the PUT method to update information about a resource. PUT will set new values on the item without regard to their current values. |\n\n**Rate Limit:** Vultr safeguards the API against bursts of incoming traffic based on the request's IP address to ensure stability for all users. If your application sends more than 20 requests per second, the API may return HTTP status code 503.\n\n## Response Codes\n\nWe use standard HTTP response codes to show the success or failure of requests. Response codes in the 2xx range indicate success, while codes in the 4xx range indicate an error, such as an authorization failure or a malformed request. All 4xx errors will return a JSON response object with an `error` attribute explaining the error. Codes in the 5xx range indicate a server-side problem preventing Vultr from fulfilling your request.\n\n| Response | Description |\n| ------ | ------------- |\n| 200 OK | The response contains your requested information. |\n| 201 Created | Your request was accepted. The resource was created. |\n| 202 Accepted | Your request was accepted. The resource was created or updated. |\n| 204 No Content | Your request succeeded, there is no additional information returned. |\n| 400 Bad Request | Your request was malformed. |\n| 401 Unauthorized | You did not supply valid authentication credentials. |\n| 403 Forbidden | You are not allowed to perform that action. |\n| 404 Not Found | No results were found for your request. |\n| 429 Too Many Requests | Your request exceeded the API rate limit. |\n| 500 Internal Server Error | We were unable to perform the request due to server-side problems. |\n\n## Meta and Pagination\n\nMany API calls will return a `meta` object with paging information.\n\n### Definitions\n\n| Term | Description |\n| ------ | ------------- |\n| List | All items available from your request. |\n| Page | A subset of a List. Choose the size of a Page with the `per_page` parameter. |\n| Total | The `total` attribute indicates the number of items in the full List.|\n| Cursor | Use the `cursor` query parameter to select a next or previous Page. |\n| Next & Prev | Use the `next` and `prev` attributes of the `links` meta object as `cursor` values. |\n\n### How to use Paging\n\nYou can request paging by setting the `per_page` query parameter.\n\n### Paging Example\n\n> These examples have abbreviated attributes and sample values. Your actual `cursor` values will be encoded alphanumeric strings.\n\nTo return a Page with the first two Plans in the List:\n\n    curl \"https://api.vultr.com/v2/plans?per_page=2\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nThe API returns an object similar to this:\n\n    {\n        \"plans\": [\n            {\n                \"id\": \"vc2-1c-2gb\",\n                \"vcpu_count\": 1,\n                \"ram\": 2048,\n                \"locations\": []\n            },\n            {\n                \"id\": \"vc2-24c-97gb\",\n                \"vcpu_count\": 24,\n                \"ram\": 98304,\n                \"locations\": []\n            }\n        ],\n        \"meta\": {\n            \"total\": 19,\n            \"links\": {\n                \"next\": \"WxYzExampleNext\",\n                \"prev\": \"WxYzExamplePrev\"\n            }\n        }\n    }\n\nThe object contains two plans. The `total` attribute indicates that 19 plans are available in the List. To navigate forward in the List, use the `next` value (**WxYzExampleNext** in this example) as your `cursor` query parameter.\n\n    curl \"https://api.vultr.com/v2/plans?per_page=2&cursor=WxYzExampleNext\" \\\n      -X GET\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nLikewise, you can use the example `prev` value **WxYzExamplePrev** to navigate backward.\n\n## Parameters\n\nYou can pass information to the API with three different types of parameters.\n\n### Path parameters\n\nSome API calls require variable parameters as part of the endpoint path. For example, to retrieve information about a user, supply the `user-id` in the endpoint.\n\n    curl \"https://api.vultr.com/v2/users/{user-id}\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\n### Query parameters\n\nSome API calls allow filtering with query parameters. For example, the `/v2/plans` endpoint supports a `type` query parameter. Setting `type=vhf` instructs the API only to return High Frequency Compute plans in the list. You'll find more specifics about valid filters in the endpoint documentation below.\n\n    curl \"https://api.vultr.com/v2/plans?type=vhf\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nYou can also combine filtering with paging. Use the `per_page` parameter to retreive a subset of vhf plans.\n\n    curl \"https://api.vultr.com/v2/plans?type=vhf&per_page=2\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\n### Request Body\n\nPUT, POST, and PATCH methods may include an object in the request body with a content type of **application/json**. The documentation for each endpoint below has more information about the expected object.\n\n## API Example Conventions\n\nThe examples in this documentation use `curl`, a command-line HTTP client, to demonstrate useage. Linux and macOS computers usually have curl installed by default, and it's [available for download](https://curl.se/download.html) on all popular platforms including Windows.\n\nEach example is split across multiple lines with the `\\` character, which is compatible with a `bash` terminal. A typical example looks like this:\n\n    curl \"https://api.vultr.com/v2/domains\" \\\n      -X POST \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n      -H \"Content-Type: application/json\" \\\n      --data '{\n        \"domain\" : \"example.com\",\n        \"ip\" : \"192.0.2.123\"\n      }'\n\n* The `-X` parameter sets the request method. For consistency, we show the method on all examples, even though it's not explicitly required for GET methods.\n* The `-H` lines set required HTTP headers. These examples are formatted to expand the VULTR\\_API\\_KEY environment variable for your convenience.\n* Examples that require a JSON object in the request body pass the required data via the `--data` parameter.\n\nAll values in this guide are examples. Do not rely on the OS or Plan IDs listed in this guide; use the appropriate endpoint to retreive values before creating resources.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "account",
			"item": [
				{
					"name": "Get Account Info",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						},
						"description": "Get your Vultr account, permission, and billing information."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"account\": {\n\t\t\"name\": \"Example Account\",\n\t\t\"email\": \"admin@example.com\",\n\t\t\"acls\": [\n\t\t\t\"manage_users\",\n\t\t\t\"subscriptions_view\",\n\t\t\t\"subscriptions\",\n\t\t\t\"billing\",\n\t\t\t\"support\",\n\t\t\t\"provisioning\",\n\t\t\t\"dns\",\n\t\t\t\"abuse\",\n\t\t\t\"upgrade\",\n\t\t\t\"firewall\",\n\t\t\t\"alerts\",\n\t\t\t\"objstore\",\n\t\t\t\"loadbalancer\"\n\t\t],\n\t\t\"balance\": -100.55,\n\t\t\"pending_charges\": 60.25,\n\t\t\"last_payment_date\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"last_payment_amount\": -1.25\n\t}\n}"
						}
					]
				}
			],
			"description": "Read-only information about your [user account](https://my.vultr.com/settings/#settingsprofile) and [billing](https://my.vultr.com/billing/#billinghistory) information.\n"
		},
		{
			"name": "application",
			"item": [
				{
					"name": "List Applications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter the results by type.\n\n|   | Type | Description |\n| - | ------ | ------------- |\n|   | all | All available application types |\n|   | marketplace | Marketplace applications |\n|   | one-click | Vultr One-Click applications |",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all available Applications. This list can be filtered by `type`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applications?type=<string>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"applications\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"name\": \"LEMP\",\n\t\t\t\"short_name\": \"lemp\",\n\t\t\t\"deploy_name\": \"LEMP on CentOS 6 x64\",\n\t\t\t\"type\": \"one-click\",\n\t\t\t\"vendor\": \"vultr\",\n\t\t\t\"image_id\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1028,\n\t\t\t\"name\": \"OpenLiteSpeed WordPress\",\n\t\t\t\"short_name\": \"openlitespeedwordpress\",\n\t\t\t\"deploy_name\": \"OpenLiteSpeed WordPress on Ubuntu 20.04 x64\",\n\t\t\t\"type\": \"marketplace\",\n\t\t\t\"vendor\": \"LiteSpeed_Technologies\",\n\t\t\t\"image_id\": \"openlitespeed-wordpress\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 2,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"description": "[One-Click](https://www.vultr.com/features/one-click-apps/) and [Marketplace](https://www.vultr.com/marketplace/) Applications are ready-to-run with minimal configuration. We have an extensive [documentation library](https://www.vultr.com/docs/category/apps) for our Applications.\n<br><br>There are two types of Applications: `marketplace` and `one-click`. This is denoted by the `type` field in the Application object. Applications with `type` of `marketplace` can be deployed by using the `image_id` while Applications with `type` of `one-click` should use the `id`.\n"
		},
		{
			"name": "backup",
			"item": [
				{
					"name": "List Backups",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/backups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backups"
							],
							"query": [
								{
									"key": "instance_id",
									"value": "<string>",
									"description": "Filter the backup list by [Instance id](#operation/list-instances).",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get information about Backups in your account. You can filter the list by `instance_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups?instance_id=<string>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups"
									],
									"query": [
										{
											"key": "instance_id",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"backups\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"description\": \"Example Automatic Backup\",\n\t\t\t\"size\": 10000000,\n\t\t\t\"status\": \"complete\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups?instance_id=<string>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups"
									],
									"query": [
										{
											"key": "instance_id",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups?instance_id=<string>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups"
									],
									"query": [
										{
											"key": "instance_id",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups?instance_id=<string>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups"
									],
									"query": [
										{
											"key": "instance_id",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Backup",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/backups/:backup-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backups",
								":backup-id"
							],
							"variable": [
								{
									"key": "backup-id",
									"value": "<string>",
									"description": "(Required) The [Backup id](#operation/list-backups)."
								}
							]
						},
						"description": "Get the information for the Backup."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups/:backup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups",
										":backup-id"
									],
									"variable": [
										{
											"key": "backup-id",
											"value": "<string>",
											"description": "(Required) The [Backup id](#operation/list-backups)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"backup\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"description\": \"Example Description\",\n\t\t\"size\": 10000000,\n\t\t\"status\": \"complete\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups/:backup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups",
										":backup-id"
									],
									"variable": [
										{
											"key": "backup-id",
											"value": "<string>",
											"description": "(Required) The [Backup id](#operation/list-backups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups/:backup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups",
										":backup-id"
									],
									"variable": [
										{
											"key": "backup-id",
											"value": "<string>",
											"description": "(Required) The [Backup id](#operation/list-backups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/backups/:backup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backups",
										":backup-id"
									],
									"variable": [
										{
											"key": "backup-id",
											"value": "<string>",
											"description": "(Required) The [Backup id](#operation/list-backups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "A backup is a scheduled, automatic, point-in-time image of an instance. We do not stop the instance when taking a backup. Booting from a backup is similar to rebooting after a non-graceful restart. [Snapshots](#tag/snapshot) are physically the same as backups, but snapshots are manual while backups run automatically on a schedule. Backups can be converted into snapshots. See our [Automatic Backup FAQ](https://www.vultr.com/docs/vps-automatic-backups) for more information.\n"
		},
		{
			"name": "baremetal",
			"item": [
				{
					"name": "List Bare Metal Instances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all Bare Metal instances in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bare_metals\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"os\": \"Application\",\n\t\t\t\"ram\": \"32768 MB\",\n\t\t\t\"disk\": \"2x 240GB SSD\",\n\t\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\t\"cpu_count\": 4,\n\t\t\t\"region\": \"ams\",\n\t\t\t\"default_password\": \"example-password\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\t\"plan\": \"vbm-4c-32gb\",\n\t\t\t\"v6_network\": \"2001:0db8:5001:3990::\",\n\t\t\t\"v6_main_ip\": \"2001:0db8:5001:3990:0ec4:7aff:fe8e:f97a\",\n\t\t\t\"v6_network_size\": 64,\n\t\t\t\"label\": \"Example Bare Metal\",\n\t\t\t\"tag\": \"Example Tag\",\n\t\t\t\"mac_address\": 2199756823533,\n\t\t\t\"os_id\": 186,\n\t\t\t\"app_id\": 3,\n\t\t\t\"image_id\": \"\",\n\t\t\t\"features\": [\n\t\t\t\t\"ipv6\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Bare Metal Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"plan\": \"<string>\",\n    \"script_id\": \"<string>\",\n    \"enable_ipv6\": \"<boolean>\",\n    \"sshkey_id\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"user_data\": \"<string>\",\n    \"label\": \"<string>\",\n    \"activation_email\": \"<boolean>\",\n    \"hostname\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"reserved_ipv4\": \"<string>\",\n    \"os_id\": \"<integer>\",\n    \"snapshot_id\": \"<string>\",\n    \"app_id\": \"<integer>\",\n    \"image_id\": \"<string>\",\n    \"persistent_pxe\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bare-metals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals"
							]
						},
						"description": "Create a new Bare Metal instance in a `region` with the desired `plan`. Choose one of the following to deploy the instance:\n\n* `os_id`\n* `snapshot_id`\n* `app_id`\n* `image_id`\n\nSupply other attributes as desired."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ams\",\n    \"plan\": \"vbm-4c-32gb\",\n    \"label\": \"Example Bare Metal\",\n    \"app_id\": 3,\n    \"enable_ipv6\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"baremetal\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Application\",\n\t\t\"ram\": \"32768 MB\",\n\t\t\"disk\": \"2x 240GB SSD\",\n\t\t\"main_ip\": \"\",\n\t\t\"cpu_count\": 4,\n\t\t\"region\": \"ams\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"pending\",\n\t\t\"netmask_v4\": \"\",\n\t\t\"gateway_v4\": \"\",\n\t\t\"plan\": \"vbm-4c-32gb\",\n\t\t\"v6_network\": \"\",\n\t\t\"v6_main_ip\": \"\",\n\t\t\"v6_network_size\": 0,\n\t\t\"label\": \"Example Bare Metal\",\n\t\t\"mac_address\": 2199756823533,\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 186,\n\t\t\"app_id\": 3,\n\t\t\"image_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ipv6\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ams\",\n    \"plan\": \"vbm-4c-32gb\",\n    \"label\": \"Example Bare Metal\",\n    \"app_id\": 3,\n    \"enable_ipv6\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ams\",\n    \"plan\": \"vbm-4c-32gb\",\n    \"label\": \"Example Bare Metal\",\n    \"app_id\": 3,\n    \"enable_ipv6\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ams\",\n    \"plan\": \"vbm-4c-32gb\",\n    \"label\": \"Example Bare Metal\",\n    \"app_id\": 3,\n    \"enable_ipv6\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ams\",\n    \"plan\": \"vbm-4c-32gb\",\n    \"label\": \"Example Bare Metal\",\n    \"app_id\": 3,\n    \"enable_ipv6\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Get information for a Bare Metal instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bare_metal\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Application\",\n\t\t\"ram\": \"32768 MB\",\n\t\t\"disk\": \"2x 240GB SSD\",\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"cpu_count\": 4,\n\t\t\"region\": \"ams\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"pending\",\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"plan\": \"vbm-4c-32gb\",\n\t\t\"v6_network\": \"2001:0db8:5001:3990::\",\n\t\t\"v6_main_ip\": \"2001:0db8:5001:3990:0ec4:7aff:fe8e:f97a\",\n\t\t\"v6_network_size\": 64,\n\t\t\"mac_address\": 2199756823533,\n\t\t\"label\": \"Example Bare Metal\",\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 183,\n\t\t\"app_id\": 3,\n\t\t\"image_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ipv6\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_data\": \"<string>\",\n    \"label\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"os_id\": \"<integer>\",\n    \"app_id\": \"<integer>\",\n    \"image_id\": \"<string>\",\n    \"enable_ipv6\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Update a Bare Metal instance. All attributes are optional. If not set, the attributes will retain their original values.\n\n**Note:** Changing `os_id`, `app_id` or `image_id` may take a few extra seconds to complete."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Bare Metal Label\",\n    \"tag\": \"Updated Tag\",\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bare_metal\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Application\",\n\t\t\"ram\": \"32768 MB\",\n\t\t\"disk\": \"2x 240GB SSD\",\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"cpu_count\": 4,\n\t\t\"region\": \"ams\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"pending\",\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"plan\": \"vbm-4c-32gb\",\n\t\t\"v6_network\": \"2001:0db8:5001:3990::\",\n\t\t\"v6_main_ip\": \"2001:0db8:5001:3990:0ec4:7aff:fe8e:f97a\",\n\t\t\"v6_network_size\": 64,\n\t\t\"mac_address\": 2199756823533,\n\t\t\"label\": \"Updated Bare Metal Label\",\n\t\t\"tag\": \"Updated Tag\",\n\t\t\"os_id\": 183,\n\t\t\"app_id\": 3,\n\t\t\"image_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ipv6\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Bare Metal Label\",\n    \"tag\": \"Updated Tag\",\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Bare Metal Label\",\n    \"tag\": \"Updated Tag\",\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Bare Metal Label\",\n    \"tag\": \"Updated Tag\",\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Delete a Bare Metal instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bare Metal IPv4 Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"ipv4"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Get the IPv4 information for the Bare Metal instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ipv4s\": [\n\t\t{\n\t\t\t\"ip\": \"192.0.2.123\",\n\t\t\t\"netmask\": \"255.255.254.0\",\n\t\t\t\"gateway\": \"192.0.2.1\",\n\t\t\t\"type\": \"main_ip\",\n\t\t\t\"reverse\": \"192.0.2.123.vultr.com\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bare Metal IPv6 Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"ipv6"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Get the IPv6 information for the Bare Metal instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ipv6s\": [\n\t\t{\n\t\t\t\"ip\": \"2001:0db8:5001:3990:0ec4:7aff:fe8e:f97a\",\n\t\t\t\"network\": \"2001:0db8:5001:3990::\",\n\t\t\t\"network_size\": 64,\n\t\t\t\"type\": \"main_ip\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Start Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"start"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Start the Bare Metal instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"start"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"start"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"start"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"start"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reboot Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reboot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"reboot"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Reboot the Bare Metal instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reboot"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reboot"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reboot"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reboot"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reinstall Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reinstall",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"reinstall"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Reinstall the Bare Metal instance.\n\n**Note:** This action may take a few extra seconds to complete."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bare_metal\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Application\",\n\t\t\"ram\": \"32768 MB\",\n\t\t\"disk\": \"2x 240GB SSD\",\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"cpu_count\": 4,\n\t\t\"region\": \"ams\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"pending\",\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"plan\": \"vbm-4c-32gb\",\n\t\t\"v6_network\": \"2001:0db8:5001:3990::\",\n\t\t\"v6_main_ip\": \"2001:0db8:5001:3990:0ec4:7aff:fe8e:f97a\",\n\t\t\"v6_network_size\": 64,\n\t\t\"label\": \"Example Bare Metal\",\n\t\t\"mac_address\": 2199756823533,\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 183,\n\t\t\"app_id\": 3,\n\t\t\"image_id\": \"\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Halt Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/halt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"halt"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Halt the Bare Metal instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"halt"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"halt"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"halt"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"halt"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bare Metal Bandwidth",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/bandwidth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"bandwidth"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Get bandwidth information for the Bare Metal instance.<br><br>The `bandwidth` object in a successful response contains objects representing a day in the month. The date is denoted by the nested object keys. Days begin and end in the UTC timezone. Bandwidth utilization data contained within the date object is refreshed periodically. We do not recommend using this endpoint to gather real-time metrics."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bandwidth\": {\n\t\t\"2020-07-25\": {\n\t\t\t\"incoming_bytes\": 15989787,\n\t\t\t\"outgoing_bytes\": 25327729\n\t\t},\n\t\t\"2020-07-26\": {\n\t\t\t\"incoming_bytes\": 13964112,\n\t\t\t\"outgoing_bytes\": 22257069\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Halt Bare Metals",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baremetal_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bare-metals/halt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								"halt"
							]
						},
						"description": "Halt Bare Metals."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"7f6f84ea-8f87-4d9e-af01-ac44db05911c\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"halt"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"7f6f84ea-8f87-4d9e-af01-ac44db05911c\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"halt"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"7f6f84ea-8f87-4d9e-af01-ac44db05911c\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"halt"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"7f6f84ea-8f87-4d9e-af01-ac44db05911c\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"halt"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reboot Bare Metals",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baremetal_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bare-metals/reboot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								"reboot"
							]
						},
						"description": "Reboot Bare Metals."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\",\n        \"d092ee75-a113-480c-ae2e-e24cc6f588c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"reboot"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\",\n        \"d092ee75-a113-480c-ae2e-e24cc6f588c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"reboot"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\",\n        \"d092ee75-a113-480c-ae2e-e24cc6f588c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"reboot"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"54a83807-64ce-42e8-a0da-4d6c31c5b93b\",\n        \"d092ee75-a113-480c-ae2e-e24cc6f588c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"reboot"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Start Bare Metals",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"baremetal_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bare-metals/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								"start"
							]
						},
						"description": "Start Bare Metals."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"start"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"start"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"baremetal_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bare-metals/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										"start"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Bare Metal User Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/user-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"user-data"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
								}
							]
						},
						"description": "Get the user-supplied, base64 encoded [user data](https://www.vultr.com/docs/manage-instance-user-data-with-the-vultr-metadata-api) for a Bare Metal."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/user-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"user-data"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"user_data\": {\n\t\t\"data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/user-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"user-data"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/user-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"user-data"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/user-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"user-data"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) The [Bare Metal id](#operation/list-baremetals)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Available Bare Metal Upgrades",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"upgrades"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter upgrade by type:\n\n- all (applications, plans)\n- applications\n- os",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get available upgrades for a Bare Metal"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"upgrades\": {\n\t\t\"os\": [\n\t\t\t{\n\t\t\t\t\"id\": 127,\n\t\t\t\t\"name\": \"CentOS 6 x64\",\n\t\t\t\t\"arch\": \"x64\",\n\t\t\t\t\"family\": \"centos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 147,\n\t\t\t\t\"name\": \"CentOS 6 i386\",\n\t\t\t\t\"arch\": \"i386\",\n\t\t\t\t\"family\": \"centos\"\n\t\t\t}\n\t\t],\n\t\t\"applications\": [\n\t\t\t{\n\t\t\t\t\"id\": 1,\n\t\t\t\t\"name\": \"LEMP\",\n\t\t\t\t\"short_name\": \"lemp\",\n\t\t\t\t\"deploy_name\": \"LEMP on CentOS 6 x64\",\n\t\t\t\t\"type\": \"one-click\",\n\t\t\t\t\"vendor\": \"vultr\",\n\t\t\t\t\"image_id\": \"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 39,\n\t\t\t\t\"name\": \"LEMP\",\n\t\t\t\t\"short_name\": \"lemp\",\n\t\t\t\t\"deploy_name\": \"LEMP on CentOS 7 x64\",\n\t\t\t\t\"type\": \"one-click\",\n\t\t\t\t\"vendor\": \"vultr\",\n\t\t\t\t\"image_id\": \"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 1028,\n\t\t\t\t\"name\": \"OpenLiteSpeed WordPress\",\n\t\t\t\t\"short_name\": \"openlitespeedwordpress\",\n\t\t\t\t\"deploy_name\": \"OpenLiteSpeed WordPress on Ubuntu 20.04 x64\",\n\t\t\t\t\"type\": \"marketplace\",\n\t\t\t\t\"vendor\": \"LiteSpeed_Technologies\",\n\t\t\t\t\"image_id\": \"openlitespeed-wordpress\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get VNC URL for a Bare Metal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bare-metals",
								":baremetal-id",
								"vnc"
							],
							"variable": [
								{
									"key": "baremetal-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the VNC URL for a Bare Metal"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"vnc"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"vnc\": {\n\t\t\"url\": \"https://my.vultr.com/subs/baremetal/novnc/api.php?data=00example11223344\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"vnc"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"vnc"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"vnc"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bare-metals/:baremetal-id/vnc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bare-metals",
										":baremetal-id",
										"vnc"
									],
									"variable": [
										{
											"key": "baremetal-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "[Bare Metal](https://www.vultr.com/products/bare-metal/) servers give you access to the underlying physical hardware in a single-tenant environment without a virtualization layer.\n"
		},
		{
			"name": "billing",
			"item": [
				{
					"name": "List Billing History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"history"
							]
						},
						"description": "Retrieve list of billing history"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_history\": [\n\t\t{\n\t\t\t\"id\": 123456,\n\t\t\t\"date\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"type\": \"invoice\",\n\t\t\t\"description\": \"Invoice #123456\",\n\t\t\t\"amount\": 100.03,\n\t\t\t\"balance\": 79.48\n\t\t},\n\t\t{\n\t\t\t\"id\": 123457,\n\t\t\t\"date\": \"2020-10-10T01:46:05+00:00\",\n\t\t\t\"type\": \"credit\",\n\t\t\t\"description\": \"Account Credit\",\n\t\t\t\"amount\": 50.55,\n\t\t\t\"balance\": -20.55\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 3,\n\t\t\"links\": {\n\t\t\t\"next\": \"WxYzExampleNext\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"history"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"history"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"history"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"history"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing\": {}\n}"
						}
					]
				},
				{
					"name": "List Invoices",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/invoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"invoices"
							]
						},
						"description": "Retrieve full specified invoice"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_invoices\": [\n\t\t{\n\t\t\t\"id\": 123456,\n\t\t\t\"date\": \"2021-10-10T00:00:00+00:00\",\n\t\t\t\"description\": \"Invoice #123456\",\n\t\t\t\"amount\": 5.25,\n\t\t\t\"balance\": 10.25\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_history\": null\n}"
						}
					]
				},
				{
					"name": "Get Invoice",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"invoices",
								":invoice-id"
							],
							"variable": [
								{
									"key": "invoice-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Retrieve specified invoice"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_invoice\": {\n\t\t\"id\": 123456,\n\t\t\"description\": \"Account Credit\",\n\t\t\"date\": \"09-01-2021T00:00:00+00:00\",\n\t\t\"amount\": 5.25\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_history\": null\n}"
						}
					]
				},
				{
					"name": "Get Invoice Items",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"invoices",
								":invoice-id",
								"items"
							],
							"variable": [
								{
									"key": "invoice-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Retrieve full specified invoice"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id",
										"items"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"invoice_items\": [\n\t\t{\n\t\t\t\"description\": \"Load Balancer (my-loadbalancer)\",\n\t\t\t\"product\": \"Load Balancer\",\n\t\t\t\"start_date\": \"2021-08-31T00:00:00+00:00\",\n\t\t\t\"end_date\": \"2021-09-30T00:00:00+00:00\",\n\t\t\t\"units\": 720,\n\t\t\t\"unit_type\": \"hours\",\n\t\t\t\"unit_price\": 0.0149,\n\t\t\t\"total\": 10\n\t\t},\n\t\t{\n\t\t\t\"description\": \"1.1.1.1 (8192 MB) [my-instance]\",\n\t\t\t\"product\": \"Vultr Cloud Compute\",\n\t\t\t\"start_date\": \"2021-09-15T00:00:00+00:00\",\n\t\t\t\"end_date\": \"2021-09-30T00:00:00+00:00\",\n\t\t\t\"units\": 371,\n\t\t\t\"unit_type\": \"hours\",\n\t\t\t\"unit_price\": 0.0595,\n\t\t\t\"total\": 22.09\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 3,\n\t\t\"links\": {\n\t\t\t\"next\": \"WxYzExampleNext\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id",
										"items"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id",
										"items"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id",
										"items"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/invoices/:invoice-id/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"invoices",
										":invoice-id",
										"items"
									],
									"variable": [
										{
											"key": "invoice-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"billing_history\": null\n}"
						}
					]
				}
			],
			"description": "Read-only [billing](https://my.vultr.com/billing/#billinghistory) information for your [user account](https://my.vultr.com/settings/#settingsprofile)."
		},
		{
			"name": "block",
			"item": [
				{
					"name": "List Block storages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all Block Storage in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"blocks\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"cost\": 5,\n\t\t\t\"status\": \"pending\",\n\t\t\t\"size_gb\": 50,\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"attached_to_instance\": \"742c9913-d088-4d67-bc61-5a10e922fbd1\",\n\t\t\t\"label\": \"Example Block Storage\",\n\t\t\t\"mount_id\": \"ewr-example112233\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"size_gb\": \"<integer>\",\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks"
							]
						},
						"description": "Create new Block Storage in a `region` with a size of `size_gb`. Size may range between 10 and 10000."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"size_gb\": 50,\n    \"label\": \"Example Block Storage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"block\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"cost\": 5,\n\t\t\"status\": \"active\",\n\t\t\"size_gb\": 50,\n\t\t\"region\": \"ewr\",\n\t\t\"attached_to_instance\": \"742c9913-d088-4d67-bc61-5a10e922fbd1\",\n\t\t\"label\": \"Example Block Storage\",\n\t\t\"mount_id\": \"ewr-example112233\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"size_gb\": 50,\n    \"label\": \"Example Block Storage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"size_gb\": 50,\n    \"label\": \"Example Block Storage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"size_gb\": 50,\n    \"label\": \"Example Block Storage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"size_gb\": 50,\n    \"label\": \"Example Block Storage\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blocks/:block-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "<string>",
									"description": "(Required) The [Block Storage id](#operation/list-blocks)."
								}
							]
						},
						"description": "Get information for Block Storage."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"block\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"cost\": 5,\n\t\t\"status\": \"active\",\n\t\t\"size_gb\": 50,\n\t\t\"region\": \"ewr\",\n\t\t\"attached_to_instance\": \"742c9913-d088-4d67-bc61-5a10e922fbd1\",\n\t\t\"label\": \"Example Block Storage\",\n\t\t\"mount_id\": \"ewr-example112233\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blocks/:block-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "<string>",
									"description": "(Required) The [Block Storage id](#operation/list-blocks)."
								}
							]
						},
						"description": "Delete Block Storage."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"<string>\",\n    \"size_gb\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blocks/:block-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks",
								":block-id"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "<string>",
									"description": "(Required) The [Block Storage id](#operation/list-blocks)."
								}
							]
						},
						"description": "Update information for Block Storage.\n"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Block Storage Label\",\n    \"size_gb\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Block Storage Label\",\n    \"size_gb\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Block Storage Label\",\n    \"size_gb\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Block Storage Label\",\n    \"size_gb\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Block Storage Label\",\n    \"size_gb\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Attach Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_id\": \"<string>\",\n    \"live\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blocks/:block-id/attach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks",
								":block-id",
								"attach"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "<string>",
									"description": "(Required) The [Block Storage id](#operation/list-blocks)."
								}
							]
						},
						"description": "Attach Block Storage to Instance `instance_id`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"attach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"attach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"attach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"attach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Detach Block Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"live\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blocks/:block-id/detach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocks",
								":block-id",
								"detach"
							],
							"variable": [
								{
									"key": "block-id",
									"value": "<string>",
									"description": "(Required) The [Block Storage id](#operation/list-blocks)."
								}
							]
						},
						"description": "Detach Block Storage."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"detach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"detach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"detach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"live\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocks/:block-id/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocks",
										":block-id",
										"detach"
									],
									"variable": [
										{
											"key": "block-id",
											"value": "<string>",
											"description": "(Required) The [Block Storage id](#operation/list-blocks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "[Block Storage](https://www.vultr.com/products/block-storage/) volumes are highly-available, redundant, SSD backed, and expandable from 10 GB to 10,000 GB. Block storage volumes can be formatted with your choice of filesystems and moved between server instances as needed. [See our FAQ](https://www.vultr.com/docs/block-storage/) for details.\n"
		},
		{
			"name": "dns",
			"item": [
				{
					"name": "List DNS Domains",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all DNS Domains in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"domains\": [\n\t\t{\n\t\t\t\"domain\": \"example.com\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"dns_sec\": \"enabled\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create DNS Domain",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"dns_sec\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							]
						},
						"description": "Create a DNS Domain for `domain`. If no `ip` address is supplied a domain with no records will be created."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"example.com\",\n    \"ip\": \"192.0.2.123\",\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"domain\": {\n\t\t\"domain\": \"example.com\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"dns_sec\": \"enabled\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Get DNS Domain",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Get information for the DNS Domain."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"domain\": {\n\t\t\"domain\": \"example.com\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"dns_sec\": \"enabled\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Domain",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Delete the DNS Domain."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a DNS Domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dns_sec\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Update the DNS Domain. "
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dns_sec\": \"enabled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get SOA information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/soa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"soa"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Get SOA information for the DNS Domain."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"dns_soa\": {\n\t\t\"nsprimary\": \"ns1.vultr.com\",\n\t\t\"email\": \"admin@example.com\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update SOA information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nsprimary\": \"<string>\",\n    \"email\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/soa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"soa"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Update the SOA information for the DNS Domain. All attributes are optional. If not set, the attributes will retain their original values."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nsprimary\": \"ns1.vultr.com\",\n    \"email\": \"admin@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nsprimary\": \"ns1.vultr.com\",\n    \"email\": \"admin@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nsprimary\": \"ns1.vultr.com\",\n    \"email\": \"admin@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nsprimary\": \"ns1.vultr.com\",\n    \"email\": \"admin@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nsprimary\": \"ns1.vultr.com\",\n    \"email\": \"admin@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/soa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"soa"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get DNSSec Info",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/dnssec",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"dnssec"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Get the DNSSEC information for the DNS Domain."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/dnssec",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"dnssec"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"dns_sec\": [\n\t\t\"example.com IN DNSKEY 257 3 13 kRrxANp7YTGqVbaWtMy8hhsK0jcG4ajjICZKMb4fKv79Vx/RSn76vNjzIT7/Uo0BXil01Fk8RRQc4nWZctGJBA==\",\n\t\t\"example.com IN DS 27933 13 1 2d9ac457e5c11a104e25d971d0a6254562bddde7\",\n\t\t\"example.com IN DS 27933 13 2 8858e7b0dfb881280ce2ca1e0eafcd93d5b53687c21da284d4f8799ba82208a9\"\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/dnssec",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"dnssec"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/dnssec",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"dnssec"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/dnssec",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"dnssec"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"data\": \"<string>\",\n    \"ttl\": \"<integer>\",\n    \"priority\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"records"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Create a DNS record."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"www\",\n    \"type\": \"A\",\n    \"data\": \"192.0.2.123\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"record\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"type\": \"A\",\n\t\t\"name\": \"www\",\n\t\t\"data\": \"192.0.2.123\",\n\t\t\"priority\": 0,\n\t\t\"ttl\": 300\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"www\",\n    \"type\": \"A\",\n    \"data\": \"192.0.2.123\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"www\",\n    \"type\": \"A\",\n    \"data\": \"192.0.2.123\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"www\",\n    \"type\": \"A\",\n    \"data\": \"192.0.2.123\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"www\",\n    \"type\": \"A\",\n    \"data\": \"192.0.2.123\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Records",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"records"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								}
							]
						},
						"description": "Get the DNS records for the Domain."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"records\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"type\": \"A\",\n\t\t\t\"name\": \"foo.example.com\",\n\t\t\t\"data\": \"192.0.2.123\",\n\t\t\t\"priority\": 0,\n\t\t\t\"ttl\": 300\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"records",
								":record-id"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								},
								{
									"key": "record-id",
									"value": "<string>",
									"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
								}
							]
						},
						"description": "Get information for a DNS Record."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"record\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"type\": \"A\",\n\t\t\"name\": \"www\",\n\t\t\"data\": \"192.0.2.123\",\n\t\t\"priority\": 0,\n\t\t\"ttl\": 300\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"data\": \"<string>\",\n    \"ttl\": \"<integer>\",\n    \"priority\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"records",
								":record-id"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								},
								{
									"key": "record-id",
									"value": "<string>",
									"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
								}
							]
						},
						"description": "Update the information for a DNS record. All attributes are optional. If not set, the attributes will retain their original values."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CNAME\",\n    \"data\": \"foo.example.com\",\n    \"ttl\": 300,\n    \"priority\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains",
								":dns-domain",
								"records",
								":record-id"
							],
							"variable": [
								{
									"key": "dns-domain",
									"value": "<string>",
									"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
								},
								{
									"key": "record-id",
									"value": "<string>",
									"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
								}
							]
						},
						"description": "Delete the DNS record."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:dns-domain/records/:record-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":dns-domain",
										"records",
										":record-id"
									],
									"variable": [
										{
											"key": "dns-domain",
											"value": "<string>",
											"description": "(Required) The [DNS Domain](#operation/list-dns-domains)."
										},
										{
											"key": "record-id",
											"value": "<string>",
											"description": "(Required) The [DNS Record id](#operation/list-dns-domain-records)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr offers [free DNS hosting](https://www.vultr.com/docs/introduction-to-vultr-dns) for customers' domains. The nameservers are on an AnyCAST network and ensure fast DNS resolution. When you manage your DNS through the API, you can view the results [in your customer portal](https://my.vultr.com/dns/).\n"
		},
		{
			"name": "firewall",
			"item": [
				{
					"name": "List Firewall Groups",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Firewall Groups."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_groups\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"description\": \"Example Firewall Group\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"date_modified\": \"2020-10-10T01:59:20+00:00\",\n\t\t\t\"instance_count\": 0,\n\t\t\t\"rule_count\": 0,\n\t\t\t\"max_rule_count\": 50\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Firewall Group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firewalls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls"
							]
						},
						"description": "Create a new Firewall Group."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Firewall Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_group\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"description\": \"Example Firewall Group\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"date_modified\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"instance_count\": 0,\n\t\t\"rule_count\": 0,\n\t\t\"max_rule_count\": 50\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Firewall Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Firewall Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Firewall Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Firewall Group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								}
							]
						},
						"description": "Get information for a Firewall Group."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_group\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"description\": \"Example Firewall Group\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"date_modified\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"instance_count\": 0,\n\t\t\"rule_count\": 0,\n\t\t\"max_rule_count\": 50\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Firewall Group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								}
							]
						},
						"description": "Update information for a Firewall Group."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated Firewall Group Name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated Firewall Group Name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated Firewall Group Name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated Firewall Group Name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Firewall Group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								}
							]
						},
						"description": "Delete a Firewall Group."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Firewall Rules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id",
								"rules"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								}
							]
						},
						"description": "Get the Firewall Rules for a Firewall Group."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_rules\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"ip_type\": \"v4\",\n\t\t\t\"action\": \"accept\",\n\t\t\t\"protocol\": \"tcp\",\n\t\t\t\"port\": \"80\",\n\t\t\t\"subnet\": \"192.0.2.0\",\n\t\t\t\"subnet_size\": 24,\n\t\t\t\"source\": \"\",\n\t\t\t\"notes\": \"Example Firewall Rule\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Firewall Rules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip_type\": \"<string>\",\n    \"protocol\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"subnet_size\": \"<integer>\",\n    \"port\": \"<string>\",\n    \"source\": \"<string>\",\n    \"notes\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id",
								"rules"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								}
							]
						},
						"description": "Create a Firewall Rule for a Firewall Group. The attributes `ip_type`, `protocol`, `subnet`, and `subnet_size` are required."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_type\": \"v4\",\n    \"protocol\": \"tcp\",\n    \"port\": \"80\",\n    \"subnet\": \"192.0.2.0\",\n    \"subnet_size\": 24,\n    \"source\": \"\",\n    \"notes\": \"Example Firewall Rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_rule\": {\n\t\t\"id\": 1,\n\t\t\"ip_type\": \"v4\",\n\t\t\"action\": \"accept\",\n\t\t\"protocol\": \"tcp\",\n\t\t\"port\": \"80\",\n\t\t\"subnet\": \"192.0.2.0\",\n\t\t\"subnet_size\": 24,\n\t\t\"source\": \"\",\n\t\t\"notes\": \"Example Firewall Rule\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_type\": \"v4\",\n    \"protocol\": \"tcp\",\n    \"port\": \"80\",\n    \"subnet\": \"192.0.2.0\",\n    \"subnet_size\": 24,\n    \"source\": \"\",\n    \"notes\": \"Example Firewall Rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_type\": \"v4\",\n    \"protocol\": \"tcp\",\n    \"port\": \"80\",\n    \"subnet\": \"192.0.2.0\",\n    \"subnet_size\": 24,\n    \"source\": \"\",\n    \"notes\": \"Example Firewall Rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_type\": \"v4\",\n    \"protocol\": \"tcp\",\n    \"port\": \"80\",\n    \"subnet\": \"192.0.2.0\",\n    \"subnet_size\": 24,\n    \"source\": \"\",\n    \"notes\": \"Example Firewall Rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Firewall Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id",
								"rules",
								":firewall-rule-id"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								},
								{
									"key": "firewall-rule-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
								}
							]
						},
						"description": "Delete a Firewall Rule."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Firewall Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firewalls",
								":firewall-group-id",
								"rules",
								":firewall-rule-id"
							],
							"variable": [
								{
									"key": "firewall-group-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
								},
								{
									"key": "firewall-rule-id",
									"value": "<string>",
									"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
								}
							]
						},
						"description": "Get a Firewall Rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_rule\": {\n\t\t\"id\": 1,\n\t\t\"ip_type\": \"v4\",\n\t\t\"action\": \"accept\",\n\t\t\"protocol\": \"tcp\",\n\t\t\"port\": \"80\",\n\t\t\"subnet\": \"192.0.2.0\",\n\t\t\"subnet_size\": 24,\n\t\t\"source\": \"\",\n\t\t\"notes\": \"Example Firewall Rule\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/firewalls/:firewall-group-id/rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"firewalls",
										":firewall-group-id",
										"rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "firewall-group-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Group id](#operation/list-firewall-groups)."
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) The [Firewall Rule id](#operation/list-firewall-group-rules)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr offers a [web-based firewall](https://www.vultr.com/docs/vultr-firewall) solution to protect one or more compute instances. [Firewall groups](https://my.vultr.com/firewall/) can manage multiple servers with a standard ruleset. You can control multiple groups with the API.\n"
		},
		{
			"name": "instances",
			"item": [
				{
					"name": "List Instances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "<string>",
									"description": "Filter by specific tag.",
									"disabled": true
								},
								{
									"key": "label",
									"value": "<string>",
									"description": "Filter by label.",
									"disabled": true
								},
								{
									"key": "main_ip",
									"value": "<string>",
									"description": "Filter by main ip address.",
									"disabled": true
								}
							]
						},
						"description": "List all VPS instances in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances?per_page=<integer>&cursor=<string>&tag=<string>&label=<string>&main_ip=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "label",
											"value": "<string>"
										},
										{
											"key": "main_ip",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"instances\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"os\": \"CentOS SELinux 8 x64\",\n\t\t\t\"ram\": 2048,\n\t\t\t\"disk\": 55,\n\t\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\t\"vcpu_count\": 1,\n\t\t\t\"region\": \"atl\",\n\t\t\t\"plan\": \"vc2-6c-16gb\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"allowed_bandwidth\": 2000,\n\t\t\t\"netmask_v4\": \"255.255.252.0\",\n\t\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\t\"power_status\": \"running\",\n\t\t\t\"server_status\": \"ok\",\n\t\t\t\"v6_network\": \"2001:0db8:1112:18fb::\",\n\t\t\t\"v6_main_ip\": \"2001:0db8:1112:18fb:0200:00ff:fe00:0000\",\n\t\t\t\"v6_network_size\": 64,\n\t\t\t\"label\": \"Example Instance\",\n\t\t\t\"internal_ip\": \"\",\n\t\t\t\"kvm\": \"https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344\",\n\t\t\t\"hostname\": \"my_hostname\",\n\t\t\t\"tag\": \"Example Tag\",\n\t\t\t\"os_id\": 215,\n\t\t\t\"app_id\": 0,\n\t\t\t\"image_id\": \"\",\n\t\t\t\"firewall_group_id\": \"\",\n\t\t\t\"features\": [\n\t\t\t\t\"ddos_protection\",\n\t\t\t\t\"ipv6\",\n\t\t\t\t\"auto_backups\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 3,\n\t\t\"links\": {\n\t\t\t\"next\": \"WxYzExampleNext\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances?per_page=<integer>&cursor=<string>&tag=<string>&label=<string>&main_ip=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "label",
											"value": "<string>"
										},
										{
											"key": "main_ip",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances?per_page=<integer>&cursor=<string>&tag=<string>&label=<string>&main_ip=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "label",
											"value": "<string>"
										},
										{
											"key": "main_ip",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances?per_page=<integer>&cursor=<string>&tag=<string>&label=<string>&main_ip=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "label",
											"value": "<string>"
										},
										{
											"key": "main_ip",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances?per_page=<integer>&cursor=<string>&tag=<string>&label=<string>&main_ip=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "label",
											"value": "<string>"
										},
										{
											"key": "main_ip",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"plan\": \"<string>\",\n    \"os_id\": \"<integer>\",\n    \"ipxe_chain_url\": \"<string>\",\n    \"iso_id\": \"<string>\",\n    \"script_id\": \"<string>\",\n    \"snapshot_id\": \"<string>\",\n    \"enable_ipv6\": \"<boolean>\",\n    \"attach_private_network\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"label\": \"<string>\",\n    \"sshkey_id\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backups\": \"<string>\",\n    \"app_id\": \"<integer>\",\n    \"image_id\": \"<string>\",\n    \"user_data\": \"<string>\",\n    \"ddos_protection\": \"<boolean>\",\n    \"activation_email\": \"<boolean>\",\n    \"hostname\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"firewall_group_id\": \"<string>\",\n    \"reserved_ipv4\": \"<string>\",\n    \"enable_private_network\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							]
						},
						"description": "Create a new VPS Instance in a `region` with the desired `plan`. Choose one of the following to deploy the instance:\n\n* `os_id`\n* `iso_id`\n* `snapshot_id`\n* `app_id`\n* `image_id`\n\nSupply other attributes as desired."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"plan\": \"vc2-6c-16gb\",\n    \"label\": \"Example Instance\",\n    \"os_id\": 215,\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\": \"enabled\",\n    \"hostname\": \"my_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"instance\": {\n\t\t\"id\": \"4f0f12e5-1f84-404f-aa84-85f431ea5ec2\",\n\t\t\"os\": \"CentOS 8 Stream\",\n\t\t\"ram\": 1024,\n\t\t\"disk\": 0,\n\t\t\"main_ip\": \"0.0.0.0\",\n\t\t\"vcpu_count\": 1,\n\t\t\"region\": \"ewr\",\n\t\t\"plan\": \"vc2-1c-1gb\",\n\t\t\"date_created\": \"2021-09-14T13:22:20+00:00\",\n\t\t\"status\": \"pending\",\n\t\t\"allowed_bandwidth\": 1000,\n\t\t\"netmask_v4\": \"\",\n\t\t\"gateway_v4\": \"0.0.0.0\",\n\t\t\"power_status\": \"running\",\n\t\t\"server_status\": \"none\",\n\t\t\"v6_network\": \"\",\n\t\t\"v6_main_ip\": \"\",\n\t\t\"v6_network_size\": 0,\n\t\t\"label\": \"\",\n\t\t\"internal_ip\": \"\",\n\t\t\"kvm\": \"\",\n\t\t\"hostname\": \"my_hostname\",\n\t\t\"tag\": \"\",\n\t\t\"os_id\": 401,\n\t\t\"app_id\": 0,\n\t\t\"image_id\": \"\",\n\t\t\"firewall_group_id\": \"\",\n\t\t\"features\": [],\n\t\t\"default_password\": \"v5{Fkvb#2ycPGwHs\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"plan\": \"vc2-6c-16gb\",\n    \"label\": \"Example Instance\",\n    \"os_id\": 215,\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\": \"enabled\",\n    \"hostname\": \"my_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"plan\": \"vc2-6c-16gb\",\n    \"label\": \"Example Instance\",\n    \"os_id\": 215,\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\": \"enabled\",\n    \"hostname\": \"my_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"plan\": \"vc2-6c-16gb\",\n    \"label\": \"Example Instance\",\n    \"os_id\": 215,\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\": \"enabled\",\n    \"hostname\": \"my_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"plan\": \"vc2-6c-16gb\",\n    \"label\": \"Example Instance\",\n    \"os_id\": 215,\n    \"user_data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\": \"enabled\",\n    \"hostname\": \"my_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get information about an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"instance\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Ubuntu 20.04 x64\",\n\t\t\"ram\": 16384,\n\t\t\"disk\": 384,\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"vcpu_count\": 4,\n\t\t\"region\": \"ewr\",\n\t\t\"plan\": \"vc2-6c-16gb\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"active\",\n\t\t\"allowed_bandwidth\": 5000,\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"power_status\": \"running\",\n\t\t\"server_status\": \"ok\",\n\t\t\"v6_network\": \"\",\n\t\t\"v6_main_ip\": \"\",\n\t\t\"v6_network_size\": 0,\n\t\t\"label\": \"Example Instance\",\n\t\t\"internal_ip\": \"\",\n\t\t\"kvm\": \"https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344\",\n\t\t\"hostname\": \"my_hostname\",\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0,\n\t\t\"image_id\": \"\",\n\t\t\"firewall_group_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ddos_protection\",\n\t\t\t\"ipv6\",\n\t\t\t\"auto_backups\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"app_id\": \"<integer>\",\n    \"image_id\": \"<string>\",\n    \"backups\": \"<string>\",\n    \"firewall_group_id\": \"<string>\",\n    \"enable_ipv6\": \"<boolean>\",\n    \"os_id\": \"<string>\",\n    \"user_data\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"plan\": \"<string>\",\n    \"ddos_protection\": \"<boolean>\",\n    \"attach_private_network\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"detach_private_network\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enable_private_network\": \"<boolean>\",\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Update information for an Instance. All attributes are optional. If not set, the attributes will retain their original values.\n\n**Note:** Changing `os_id`, `app_id` or `image_id` may take a few extra seconds to complete."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Instance\",\n    \"tag\": \"Example Tag\",\n    \"plan\": \"vc2-24c-97gb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"instance\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Ubuntu 20.04 x64\",\n\t\t\"ram\": 16384,\n\t\t\"disk\": 384,\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"vcpu_count\": 4,\n\t\t\"region\": \"ewr\",\n\t\t\"plan\": \"vc2-24c-97gb\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"active\",\n\t\t\"allowed_bandwidth\": 5000,\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"power_status\": \"running\",\n\t\t\"server_status\": \"ok\",\n\t\t\"v6_network\": \"\",\n\t\t\"v6_main_ip\": \"\",\n\t\t\"v6_network_size\": 0,\n\t\t\"label\": \"Example Instance\",\n\t\t\"internal_ip\": \"\",\n\t\t\"kvm\": \"https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344\",\n\t\t\"hostname\": \"my_hostname\",\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0,\n\t\t\"image_id\": \"\",\n\t\t\"firewall_group_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ddos_protection\",\n\t\t\t\"ipv6\",\n\t\t\t\"auto_backups\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Instance\",\n    \"tag\": \"Example Tag\",\n    \"plan\": \"vc2-24c-97gb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Instance\",\n    \"tag\": \"Example Tag\",\n    \"plan\": \"vc2-24c-97gb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Instance\",\n    \"tag\": \"Example Tag\",\n    \"plan\": \"vc2-24c-97gb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Delete an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Halt Instances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/halt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"halt"
							]
						},
						"description": "Halt Instances."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"halt"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"halt"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"halt"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"halt"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reboot instances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/reboot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"reboot"
							]
						},
						"description": "Reboot Instances."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"reboot"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"reboot"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"reboot"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"reboot"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Start instances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"start"
							]
						},
						"description": "Start Instances."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"start"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"start"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_ids\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n        \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n        \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"start"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Start instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"start"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Start an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"start"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"start"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"start"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"start"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reboot Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/reboot",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"reboot"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Reboot an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reboot"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reboot"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reboot"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reboot"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reinstall Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hostname\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/reinstall",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"reinstall"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Reinstall an Instance using an optional `hostname`.\n\n**Note:** This action may take a few extra seconds to complete."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostname\": \"my_new_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"instance\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"os\": \"Ubuntu 20.04 x64\",\n\t\t\"ram\": 16384,\n\t\t\"disk\": 384,\n\t\t\"main_ip\": \"192.0.2.123\",\n\t\t\"vcpu_count\": 4,\n\t\t\"region\": \"ewr\",\n\t\t\"plan\": \"vc2-6c-16gb\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"status\": \"active\",\n\t\t\"allowed_bandwidth\": 5000,\n\t\t\"netmask_v4\": \"255.255.254.0\",\n\t\t\"gateway_v4\": \"192.0.2.1\",\n\t\t\"power_status\": \"running\",\n\t\t\"server_status\": \"ok\",\n\t\t\"v6_network\": \"\",\n\t\t\"v6_main_ip\": \"\",\n\t\t\"v6_network_size\": 0,\n\t\t\"label\": \"Example Instance\",\n\t\t\"internal_ip\": \"\",\n\t\t\"kvm\": \"https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344\",\n\t\t\"hostname\": \"my_new_hostname\",\n\t\t\"tag\": \"Example Tag\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0,\n\t\t\"image_id\": \"\",\n\t\t\"firewall_group_id\": \"\",\n\t\t\"features\": [\n\t\t\t\"ddos_protection\",\n\t\t\t\"ipv6\",\n\t\t\t\"auto_backups\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostname\": \"my_new_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostname\": \"my_new_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostname\": \"my_new_hostname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/reinstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"reinstall"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Instance Bandwidth",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/bandwidth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"bandwidth"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get bandwidth information about an Instance.<br><br>The `bandwidth` object in a successful response contains objects representing a day in the month. The date is denoted by the nested object keys. Days begin and end in the UTC timezone. The bandwidth utilization data contained within the date object is refreshed periodically. We do not recommend using this endpoint to gather real-time metrics."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"bandwidth\": {\n\t\t\"2020-07-25\": {\n\t\t\t\"incoming_bytes\": 15989787,\n\t\t\t\"outgoing_bytes\": 25327729\n\t\t},\n\t\t\"2020-07-26\": {\n\t\t\t\"incoming_bytes\": 13964112,\n\t\t\t\"outgoing_bytes\": 22257069\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/bandwidth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"bandwidth"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance neighbors",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/neighbors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"neighbors"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get a list of other instances in the same location as this Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/neighbors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"neighbors"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"neighbors\": [\n\t\t\"478dbfe7-43f8-4dc8-940c-8bb61f547400\",\n\t\t\"a8047e6b-16bd-42be-8351-58df7e5ab89c\"\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/neighbors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"neighbors"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/neighbors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"neighbors"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/neighbors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"neighbors"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List instance Private Networks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/private-networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"private-networks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "List the private networks for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"private_networks\": [\n\t\t{\n\t\t\t\"network_id\": \"d325e78b-bcec-4d4e-b9b8-9c294f37b04d\",\n\t\t\t\"mac_address\": \"00:00:5e:00:53:5e\",\n\t\t\t\"ip_address\": \"10.99.0.123\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance ISO Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/iso",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"iso"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get the ISO status for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"iso_status\": {\n\t\t\"state\": \"ready\",\n\t\t\"iso_id\": \"0532a75b-14e8-48b8-b27e-1ebcf382a804\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Attach ISO to Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iso_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/iso/attach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"iso",
								"attach"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Attach an ISO to an Instance."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iso_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"iso_status\": {\n\t\t\"status\": \"ismounting\",\n\t\t\"iso_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iso_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iso_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"iso_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Detach ISO from instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/iso/detach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"iso",
								"detach"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Detach the ISO from an Instance."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"iso_status\": {\n\t\t\"status\": \"isunmounting\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/iso/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"iso",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Attach Private Network to Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/private-networks/attach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"private-networks",
								"attach"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Attach Private Network to an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"attach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Detach Private Network from Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/private-networks/detach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"private-networks",
								"detach"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Detach Private Network from an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/private-networks/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"private-networks",
										"detach"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set Instance Backup Schedule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"<string>\",\n    \"hour\": \"<integer>\",\n    \"dow\": \"<integer>\",\n    \"dom\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"backup-schedule"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Set the backup schedule for an Instance in UTC. The `type` is required."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"daily\",\n    \"hour\": 10,\n    \"dow\": 1,\n    \"dom\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"daily\",\n    \"hour\": 10,\n    \"dow\": 1,\n    \"dom\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"daily\",\n    \"hour\": 10,\n    \"dow\": 1,\n    \"dom\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance Backup Schedule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"backup-schedule"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get the backup schedule for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"backup_schedule\": {\n\t\t\"enabled\": true,\n\t\t\"type\": \"daily\",\n\t\t\"next_scheduled_time_utc\": \"2020-07-28 00:00:00\",\n\t\t\"hour\": 10,\n\t\t\"dow\": 1,\n\t\t\"dom\": 1\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/backup-schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"backup-schedule"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Restore Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"backup_id\": \"<string>\",\n    \"snapshot_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"restore"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Restore an Instance from either `backup_id` or `snapshot_id`."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backup_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"restore"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": {\n\t\t\"restore_type\": \"backup_id\",\n\t\t\"restore_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"status\": \"inprogress\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backup_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"restore"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backup_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"restore"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backup_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"restore"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Instance IPv4 Information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv4"
							],
							"query": [
								{
									"key": "public_network",
									"value": "<boolean>",
									"description": "List only Public networks.\n\n* yes\n* no",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "List the IPv4 information for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4?public_network=<boolean>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"query": [
										{
											"key": "public_network",
											"value": "<boolean>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ipv4s\": [\n\t\t{\n\t\t\t\"ip\": \"192.0.2.123\",\n\t\t\t\"netmask\": \"255.255.254.0\",\n\t\t\t\"gateway\": \"192.0.2.1\",\n\t\t\t\"type\": \"main_ip\",\n\t\t\t\"reverse\": \"host1.example.com\"\n\t\t},\n\t\t{\n\t\t\t\"ip\": \"203.0.113.123\",\n\t\t\t\"netmask\": \"255.255.255.255\",\n\t\t\t\"gateway\": \"\",\n\t\t\t\"type\": \"secondary_ip\",\n\t\t\t\"reverse\": \"host2.example.com\"\n\t\t},\n\t\t{\n\t\t\t\"ip\": \"10.99.0.123\",\n\t\t\t\"netmask\": \"255.255.0.0\",\n\t\t\t\"gateway\": \"\",\n\t\t\t\"type\": \"private\",\n\t\t\t\"reverse\": \"\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 3,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4?public_network=<boolean>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"query": [
										{
											"key": "public_network",
											"value": "<boolean>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4?public_network=<boolean>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"query": [
										{
											"key": "public_network",
											"value": "<boolean>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4?public_network=<boolean>&per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"query": [
										{
											"key": "public_network",
											"value": "<boolean>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create IPv4",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reboot\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv4"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Create an IPv4 address for an Instance."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reboot\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ipv4\": {\n\t\t\"ip\": \"192.0.2.123\",\n\t\t\"netmask\": \"255.255.254.0\",\n\t\t\"gateway\": \"192.0.2.1\",\n\t\t\"type\": \"secondary_ip\",\n\t\t\"reverse\": \"192.0.2.123.vultr.com\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reboot\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reboot\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reboot\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance IPv6 Information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv6"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get the IPv6 information for an VPS Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ipv6s\": [\n\t\t{\n\t\t\t\"ip\": \"2001:0db8:5:6bb:5400:02ff:fee5:3fe3\",\n\t\t\t\"network\": \"2001:0db8:5:6bb::\",\n\t\t\t\"network_size\": 64,\n\t\t\t\"type\": \"main_ip\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Instance Reverse IPv6",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip\": \"<string>\",\n    \"reverse\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv6",
								"reverse"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Create a reverse IPv6 entry for an Instance. The `ip` and `reverse` attributes are required. IP address must be in full, expanded format."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"2001:0db8:0005:6bb0:5400:2ff0:fee5:0002\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"2001:0db8:0005:6bb0:5400:2ff0:fee5:0002\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"2001:0db8:0005:6bb0:5400:2ff0:fee5:0002\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"2001:0db8:0005:6bb0:5400:2ff0:fee5:0002\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Instance IPv6 Reverse",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv6",
								"reverse"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "List the reverse IPv6 information for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"reverse_ipv6s\": [\n\t\t{\n\t\t\t\"ip\": \"2001:0db8:5:6bb:5400:2ff:fee5:1\",\n\t\t\t\"reverse\": \"foo.example.com\"\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Create Instance Reverse IPv4",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip\": \"<string>\",\n    \"reverse\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv4",
								"reverse"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Create a reverse IPv4 entry for an Instance. The `ip` and `reverse` attributes are required. "
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\",\n    \"reverse\": \"foo.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Instance User Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/user-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"user-data"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get the user-supplied, base64 encoded [user data](https://www.vultr.com/docs/manage-instance-user-data-with-the-vultr-metadata-api) for an Instance."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/user-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"user-data"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"user_data\": {\n\t\t\"data\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Halt Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/halt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"halt"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Halt an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"halt"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"halt"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"halt"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/halt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"halt"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set Default Reverse DNS Entry",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse/default",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv4",
								"reverse",
								"default"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Set a reverse DNS entry for an IPv4 address"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse/default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse",
										"default"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse/default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse",
										"default"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse/default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse",
										"default"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip\": \"192.0.2.123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/reverse/default",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										"reverse",
										"default"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete IPv4 Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv4/:ipv4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv4",
								":ipv4"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								},
								{
									"key": "ipv4",
									"value": "<string>",
									"description": "(Required) The IPv4 address."
								}
							]
						},
						"description": "Delete an IPv4 address from an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/:ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										":ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv4",
											"value": "<string>",
											"description": "(Required) The IPv4 address."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/:ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										":ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv4",
											"value": "<string>",
											"description": "(Required) The IPv4 address."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/:ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										":ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv4",
											"value": "<string>",
											"description": "(Required) The IPv4 address."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv4/:ipv4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv4",
										":ipv4"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv4",
											"value": "<string>",
											"description": "(Required) The IPv4 address."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Instance Reverse IPv6",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse/:ipv6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"ipv6",
								"reverse",
								":ipv6"
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								},
								{
									"key": "ipv6",
									"value": "<string>",
									"description": "(Required) The IPv6 address."
								}
							]
						},
						"description": "Delete the reverse IPv6 for an Instance."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse/:ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse",
										":ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv6",
											"value": "<string>",
											"description": "(Required) The IPv6 address."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse/:ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse",
										":ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv6",
											"value": "<string>",
											"description": "(Required) The IPv6 address."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse/:ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse",
										":ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv6",
											"value": "<string>",
											"description": "(Required) The IPv6 address."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/ipv6/reverse/:ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"ipv6",
										"reverse",
										":ipv6"
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										},
										{
											"key": "ipv6",
											"value": "<string>",
											"description": "(Required) The IPv6 address."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Available Instance Upgrades",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/:instance-id/upgrades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								":instance-id",
								"upgrades"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter upgrade by type:\n\n- all (applications, os, plans)\n- applications\n- os\n- plans",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "instance-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Get available upgrades for an Instance"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"upgrades\": {\n\t\t\"os\": [\n\t\t\t{\n\t\t\t\t\"id\": 900,\n\t\t\t\t\"name\": \"Example CentOS 6 x64\",\n\t\t\t\t\"arch\": \"x64\",\n\t\t\t\t\"family\": \"centos\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 901,\n\t\t\t\t\"name\": \"Example CentOS 6 i386\",\n\t\t\t\t\"arch\": \"i386\",\n\t\t\t\t\"family\": \"centos\"\n\t\t\t}\n\t\t],\n\t\t\"applications\": [\n\t\t\t{\n\t\t\t\t\"id\": 1,\n\t\t\t\t\"name\": \"LEMP\",\n\t\t\t\t\"short_name\": \"lemp\",\n\t\t\t\t\"deploy_name\": \"LEMP on CentOS 6 x64\",\n\t\t\t\t\"type\": \"one-click\",\n\t\t\t\t\"vendor\": \"vultr\",\n\t\t\t\t\"image_id\": \"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 39,\n\t\t\t\t\"name\": \"LEMP\",\n\t\t\t\t\"short_name\": \"lemp\",\n\t\t\t\t\"deploy_name\": \"LEMP on CentOS 7 x64\",\n\t\t\t\t\"type\": \"one-click\",\n\t\t\t\t\"vendor\": \"vultr\",\n\t\t\t\t\"image_id\": \"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 1028,\n\t\t\t\t\"name\": \"OpenLiteSpeed WordPress\",\n\t\t\t\t\"short_name\": \"openlitespeedwordpress\",\n\t\t\t\t\"deploy_name\": \"OpenLiteSpeed WordPress on Ubuntu 20.04 x64\",\n\t\t\t\t\"type\": \"marketplace\",\n\t\t\t\t\"vendor\": \"LiteSpeed_Technologies\",\n\t\t\t\t\"image_id\": \"openlitespeed-wordpress\"\n\t\t\t}\n\t\t],\n\t\t\"plans\": [\n\t\t\t\"vc2-2c-4gb\",\n\t\t\t\"vc2-4c-8gb\",\n\t\t\t\"vc2-6c-16gb\",\n\t\t\t\"vc2-8c-64gb\",\n\t\t\t\"vc2-16c-64gb\",\n\t\t\t\"vc2-24c-97gb\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instance-id/upgrades?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instance-id",
										"upgrades"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "instance-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr [Cloud instances](https://www.vultr.com/products/cloud-compute/) can be [deployed](https://my.vultr.com/) with your preferred operating system or pre-installed application in seconds. [High Frequency Compute](https://www.vultr.com/products/high-frequency-compute/) instances are powered by high clock speed CPU's and NVMe local storage to power your most demanding applications. [Dedicated Cloud](https://www.vultr.com/products/dedicated-cloud/) instances have dedicated CPU, SSD drives, and RAM.\n"
		},
		{
			"name": "iso",
			"item": [
				{
					"name": "List ISOs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/iso",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iso"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get the ISOs in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"isos\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"filename\": \"my-iso.iso\",\n\t\t\t\"size\": 120586240,\n\t\t\t\"md5sum\": \"77ba289bdc966ec996278a5a740d96d8\",\n\t\t\t\"sha512sum\": \"2b31b6fcab34d6ea9a6b293601c39b90cb044e5679fcc5\",\n\t\t\t\"status\": \"complete\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/iso",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iso"
							]
						},
						"description": "Create a new ISO in your account from `url`."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/my-iso.iso\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"iso\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"filename\": \"my-iso.iso\",\n\t\t\"status\": \"pending\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/my-iso.iso\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/my-iso.iso\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/my-iso.iso\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/iso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/iso/:iso-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iso",
								":iso-id"
							],
							"variable": [
								{
									"key": "iso-id",
									"value": "<string>",
									"description": "(Required) The [ISO id](#operation/list-isos)."
								}
							]
						},
						"description": "Get information for an ISO."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"iso\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"filename\": \"my-iso.iso\",\n\t\t\"size\": 120586240,\n\t\t\"md5sum\": \"77ba289bdc966ec996278a5a740d96d8\",\n\t\t\"sha512sum\": \"2b31b6fcab34d6ea9a6b293601c39b90cb044e5679fcc5\",\n\t\t\"status\": \"complete\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/iso/:iso-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iso",
								":iso-id"
							],
							"variable": [
								{
									"key": "iso-id",
									"value": "<string>",
									"description": "(Required) The [ISO id](#operation/list-isos)."
								}
							]
						},
						"description": "Delete an ISO."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso/:iso-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso",
										":iso-id"
									],
									"variable": [
										{
											"key": "iso-id",
											"value": "<string>",
											"description": "(Required) The [ISO id](#operation/list-isos)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Public ISOs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/iso-public",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iso-public"
							]
						},
						"description": "List all Vultr Public ISOs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso-public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso-public"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"public_isos\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b604\",\n\t\t\t\"name\": \"CentOS 7\",\n\t\t\t\"description\": \"7 x86_64 Minimal\",\n\t\t\t\"md5sum\": \"7f4df50f42ee1b52b193e79855a3aa19\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso-public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso-public"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iso-public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iso-public"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "[Upload](https://www.vultr.com/features/upload-iso/) and boot instances from your ISO, or choose one from our [public ISO library](https://my.vultr.com/iso/public/). See our [ISO documentation](https://www.vultr.com/docs/requirements-for-uploading-an-os-iso-to-vultr).\n"
		},
		{
			"name": "kubernetes",
			"item": [
				{
					"name": "Create Kubernetes Cluster",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"version\": \"<string>\",\n    \"label\": \"<string>\",\n    \"node_pools\": [\n        {\n            \"node_quantity\": \"<integer>\",\n            \"label\": \"<string>\",\n            \"plan\": \"<string>\",\n            \"tag\": \"<string>\"\n        },\n        {\n            \"node_quantity\": \"<integer>\",\n            \"label\": \"<string>\",\n            \"plan\": \"<string>\",\n            \"tag\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters"
							]
						},
						"description": "Create Kubernetes Cluster"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"vke\",\n    \"region\": \"lax\",\n    \"version\": \"v1.20.0+1\",\n    \"node_pools\": [\n        {\n            \"node_quantity\": 2,\n            \"label\": \"my-label\",\n            \"plan\": \"vc2-1c-2gb\",\n            \"tag\": \"my-tag\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"vke_cluster\": {\n\t\t\"id\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e\",\n\t\t\"label\": \"vke\",\n\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\"cluster_subnet\": \"10.244.0.0/16\",\n\t\t\"service_subnet\": \"10.96.0.0/12\",\n\t\t\"ip\": \"0.0.0.0\",\n\t\t\"endpoint\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e.vultr-k8s.com\",\n\t\t\"version\": \"v1.20.0+1\",\n\t\t\"region\": \"lax\",\n\t\t\"status\": \"pending\",\n\t\t\"node_pools\": [\n\t\t\t{\n\t\t\t\t\"id\": \"11e4443a-f92a-46d6-94c8-61c1a1a7514e\",\n\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\"date_updated\": \"2021-07-07T22:58:44+00:00\",\n\t\t\t\t\"label\": \"my-label\",\n\t\t\t\t\"tag\": \"my-tag\",\n\t\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\t\"status\": \"pending\",\n\t\t\t\t\"node_quantity\": 2,\n\t\t\t\t\"nodes\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"43eda5c8-67f7-4c63-88bc-2f568b48b2b0\",\n\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313dd1\",\n\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\"status\": \"pending\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"15a7893d-d584-45d5-a74c-d9f46866aa3c\",\n\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313ddc\",\n\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\"status\": \"pending\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"vke\",\n    \"region\": \"lax\",\n    \"version\": \"v1.20.0+1\",\n    \"node_pools\": [\n        {\n            \"node_quantity\": 2,\n            \"label\": \"my-label\",\n            \"plan\": \"vc2-1c-2gb\",\n            \"tag\": \"my-tag\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"vke\",\n    \"region\": \"lax\",\n    \"version\": \"v1.20.0+1\",\n    \"node_pools\": [\n        {\n            \"node_quantity\": 2,\n            \"label\": \"my-label\",\n            \"plan\": \"vc2-1c-2gb\",\n            \"tag\": \"my-tag\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"vke\",\n    \"region\": \"lax\",\n    \"version\": \"v1.20.0+1\",\n    \"node_pools\": [\n        {\n            \"node_quantity\": 2,\n            \"label\": \"my-label\",\n            \"plan\": \"vc2-1c-2gb\",\n            \"tag\": \"my-tag\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Kubernetes Clusters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters"
							]
						},
						"description": "List all Kubernetes clusters currently deployed"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"vke_clusters\": [\n\t\t{\n\t\t\t\"id\": \"c907e832-3080-48a6-a54d-7379e645c0b7\",\n\t\t\t\"label\": \"my-vke\",\n\t\t\t\"date_created\": \"2021-07-02T12:12:43+00:00\",\n\t\t\t\"cluster_subnet\": \"10.244.0.0/16\",\n\t\t\t\"service_subnet\": \"10.96.0.0/12\",\n\t\t\t\"ip\": \"8.9.30.155\",\n\t\t\t\"endpoint\": \"c907e832-3080-48a6-a54d-7379e645c0b7.vultr-k8s.com\",\n\t\t\t\"version\": \"v1.20.0+1\",\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"node_pools\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"74de1914-63ea-4a78-9da5-b7220063c701\",\n\t\t\t\t\t\"date_created\": \"2021-07-02T12:12:44+00:00\",\n\t\t\t\t\t\"date_updated\": \"2021-07-03T12:12:44+00:00\",\n\t\t\t\t\t\"label\": \"nodepool\",\n\t\t\t\t\t\"tag\": \"my-tag\",\n\t\t\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\t\t\"status\": \"active\",\n\t\t\t\t\t\"node_quantity\": 2,\n\t\t\t\t\t\"nodes\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"cafd4673-2a62-49c4-a045-44d05ecc0a7b\",\n\t\t\t\t\t\t\t\"label\": \"nodepool-6a960df02bc1b\",\n\t\t\t\t\t\t\t\"date_created\": \"2021-07-02T12:12:44+00:00\",\n\t\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"5fc5ae88-f73e-46b5-9fa1-ac5ed8dcd33c\",\n\t\t\t\t\t\t\t\"label\": \"nodepool-6a960df02bc25\",\n\t\t\t\t\t\t\t\"date_created\": \"2021-07-02T12:12:44+00:00\",\n\t\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e\",\n\t\t\t\"label\": \"vke\",\n\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\"cluster_subnet\": \"10.244.0.0/16\",\n\t\t\t\"service_subnet\": \"10.96.0.0/12\",\n\t\t\t\"ip\": \"207.246.109.187\",\n\t\t\t\"endpoint\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e.vultr-k8s.com\",\n\t\t\t\"version\": \"v1.20.0+1\",\n\t\t\t\"region\": \"lax\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"node_pools\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"11e4443a-f92a-46d6-94c8-61c1a1a7514e\",\n\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\"date_updated\": \"2021-07-08T12:12:44+00:00\",\n\t\t\t\t\t\"label\": \"my-label\",\n\t\t\t\t\t\"tag\": \"my-tag\",\n\t\t\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\t\t\"status\": \"active\",\n\t\t\t\t\t\"node_quantity\": 2,\n\t\t\t\t\t\"nodes\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"43eda5c8-67f7-4c63-88bc-2f568b48b2b0\",\n\t\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313dd1\",\n\t\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"15a7893d-d584-45d5-a74c-d9f46866aa3c\",\n\t\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313ddc\",\n\t\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 2,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Kubernetes Cluster",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Get Kubernetes Cluster"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"vke_cluster\": {\n\t\t\"id\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e\",\n\t\t\"label\": \"vke\",\n\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\"cluster_subnet\": \"10.244.0.0/16\",\n\t\t\"service_subnet\": \"10.96.0.0/12\",\n\t\t\"ip\": \"207.246.109.187\",\n\t\t\"endpoint\": \"455dcd32-e621-48ee-a10e-0cb5f754e13e.vultr-k8s.com\",\n\t\t\"version\": \"v1.20.0+1\",\n\t\t\"region\": \"lax\",\n\t\t\"status\": \"active\",\n\t\t\"node_pools\": [\n\t\t\t{\n\t\t\t\t\"id\": \"11e4443a-f92a-46d6-94c8-61c1a1a7514e\",\n\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\"date_updated\": \"2021-07-08T12:12:44+00:00\",\n\t\t\t\t\"label\": \"my-label\",\n\t\t\t\t\"tag\": \"my-tag\",\n\t\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\t\"status\": \"active\",\n\t\t\t\t\"node_quantity\": 2,\n\t\t\t\t\"nodes\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"43eda5c8-67f7-4c63-88bc-2f568b48b2b0\",\n\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313dd1\",\n\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"15a7893d-d584-45d5-a74c-d9f46866aa3c\",\n\t\t\t\t\t\t\"label\": \"my-label-6ac60e6313ddc\",\n\t\t\t\t\t\t\"date_created\": \"2021-07-07T22:57:01+00:00\",\n\t\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Kubernetes Cluster",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Update Kubernetes Cluster"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"my new label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"my new label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"my new label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"my new label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Kubernetes Cluster",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Delete Kubernetes Cluster"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete VKE Cluster and All Related Resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/delete-with-linked-resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"delete-with-linked-resources"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete Kubernetes Cluster and all related resources. "
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/delete-with-linked-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"delete-with-linked-resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/delete-with-linked-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"delete-with-linked-resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/delete-with-linked-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"delete-with-linked-resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/delete-with-linked-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"delete-with-linked-resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Kubernetes Resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"resources"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Get the block storage volumes and load balancers deployed by the specified Kubernetes cluster."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"resources\": {\n\t\t\"block_storage\": [\n\t\t\t{\n\t\t\t\t\"id\": \"29479a12-6edd-48cf-a883-24eccafab094\",\n\t\t\t\t\"label\": \"29479a12-6edd-48cf-a883-24eccafab094\",\n\t\t\t\t\"date_created\": \"2021-07-29T16:41:07+00:00\",\n\t\t\t\t\"status\": \"active\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"0fa3097e-aef9-475e-958a-56f697ed3998\",\n\t\t\t\t\"label\": \"0fa3097e-aef9-475e-958a-56f697ed3998\",\n\t\t\t\t\"date_created\": \"2021-08-04T15:34:50+00:00\",\n\t\t\t\t\"status\": \"pending\"\n\t\t\t}\n\t\t],\n\t\t\"load_balancer\": [\n\t\t\t{\n\t\t\t\t\"id\": \"369ed902-2ec4-4a22-b959-cb1709394c3a\",\n\t\t\t\t\"label\": \"369ed902-2ec4-4a22-b959-cb1709394c3a\",\n\t\t\t\t\"date_created\": \"2021-07-29T16:46:12+00:00\",\n\t\t\t\t\"status\": \"active\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"resources"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create NodePool",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"node_quantity\": \"<integer>\",\n    \"label\": \"<string>\",\n    \"plan\": \"<string>\",\n    \"tag\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Create NodePool for a Existing Kubernetes Cluster"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 2,\n    \"label\": \"nodepool\",\n    \"plan\": \"vc2-1c-2gb\",\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"node_pool\": {\n\t\t\"id\": \"4130764b-5276-4552-546f-32513239732b\",\n\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\"date_updated\": \"2021-07-08T23:29:18+00:00\",\n\t\t\"label\": \"nodepool\",\n\t\t\"tag\": \"my-tag\",\n\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\"status\": \"pending\",\n\t\t\"node_quantity\": 2,\n\t\t\"nodes\": [\n\t\t\t{\n\t\t\t\t\"id\": \"2f863151-d784-4184-804e-31e4e60945bd\",\n\t\t\t\t\"label\": \"nodepool-6c360e638ce61\",\n\t\t\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\t\t\"status\": \"pending\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"73a459dc-293f-4c2b-92f7-61be459a033b\",\n\t\t\t\t\"label\": \"nodepool-6c360e638ce6c\",\n\t\t\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\t\t\"status\": \"pending\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 2,\n    \"label\": \"nodepool\",\n    \"plan\": \"vc2-1c-2gb\",\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 2,\n    \"label\": \"nodepool\",\n    \"plan\": \"vc2-1c-2gb\",\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 2,\n    \"label\": \"nodepool\",\n    \"plan\": \"vc2-1c-2gb\",\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List NodePools",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "List all available NodePools on a Kubernetes Cluster"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"node_pools\": [\n\t\t{\n\t\t\t\"id\": \"e97bdee9-2781-4f31-be03-60fc75f399ae\",\n\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\"date_updated\": \"2021-07-08T12:12:44+00:00\",\n\t\t\t\"label\": \"my-label\",\n\t\t\t\"tag\": \"my-tag\",\n\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"node_quantity\": 2,\n\t\t\t\"nodes\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"f2e11430-76e5-4dc6-a1c9-ef5682c21ddf\",\n\t\t\t\t\t\"label\": \"my-label-44060e6384c45\",\n\t\t\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"c0a160eb-a7bc-4377-a6fb-52a9531167ca\",\n\t\t\t\t\t\"label\": \"my-label-44060e6384c50\",\n\t\t\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"4130764b-5276-4552-546f-32513239732b\",\n\t\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\t\"label\": \"nodepool\",\n\t\t\t\"tag\": \"my-tag\",\n\t\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"node_quantity\": 2,\n\t\t\t\"nodes\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"2f863151-d784-4184-804e-31e4e60945bd\",\n\t\t\t\t\t\"label\": \"nodepool-6c360e638ce61\",\n\t\t\t\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"73a459dc-293f-4c2b-92f7-61be459a033b\",\n\t\t\t\t\t\"label\": \"nodepool-6c360e638ce6c\",\n\t\t\t\t\t\"date_created\": \"2021-07-07T23:29:18+00:00\",\n\t\t\t\t\t\"status\": \"active\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 2,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get NodePool",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools",
								":nodepool-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								},
								{
									"key": "nodepool-id",
									"value": "<string>",
									"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
								}
							]
						},
						"description": "Get Nodepool from a Kubernetes Cluster"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"node_pool\": {\n\t\t\"id\": \"e97bdee9-2781-4f31-be03-60fc75f399ae\",\n\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\"date_updated\": \"2021-07-08T12:12:44+00:00\",\n\t\t\"label\": \"my-label\",\n\t\t\"tag\": \"my-tag\",\n\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\"status\": \"active\",\n\t\t\"node_quantity\": 2,\n\t\t\"nodes\": [\n\t\t\t{\n\t\t\t\t\"id\": \"f2e11430-76e5-4dc6-a1c9-ef5682c21ddf\",\n\t\t\t\t\"label\": \"my-label-44060e6384c45\",\n\t\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\t\"status\": \"active\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"c0a160eb-a7bc-4377-a6fb-52a9531167ca\",\n\t\t\t\t\"label\": \"my-label-44060e6384c50\",\n\t\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\t\"status\": \"active\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Nodepool",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"node_quantity\": \"<integer>\",\n    \"tag\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools",
								":nodepool-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								},
								{
									"key": "nodepool-id",
									"value": "<string>",
									"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
								}
							]
						},
						"description": "Update a Nodepool on a Kubernetes Cluster"
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 1,\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"node_pool\": {\n\t\t\"id\": \"e97bdee9-2781-4f31-be03-60fc75f399ae\",\n\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\"date_updated\": \"2021-07-08T12:12:44+00:00\",\n\t\t\"label\": \"my-label\",\n\t\t\"tag\": \"my-tag\",\n\t\t\"plan\": \"vc2-1c-2gb\",\n\t\t\"status\": \"active\",\n\t\t\"node_quantity\": 1,\n\t\t\"nodes\": [\n\t\t\t{\n\t\t\t\t\"id\": \"f2e11430-76e5-4dc6-a1c9-ef5682c21ddf\",\n\t\t\t\t\"label\": \"my-label-44060e6384c45\",\n\t\t\t\t\"date_created\": \"2021-07-07T23:27:08+00:00\",\n\t\t\t\t\"status\": \"active\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 1,\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 1,\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"node_quantity\": 1,\n    \"tag\": \"my-tag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Nodepool",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools",
								":nodepool-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								},
								{
									"key": "nodepool-id",
									"value": "<string>",
									"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
								}
							]
						},
						"description": "Delete a NodePool from a Kubernetes Cluster"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete NodePool Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools",
								":nodepool-id",
								"nodes",
								":node-id"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								},
								{
									"key": "nodepool-id",
									"value": "<string>",
									"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
								},
								{
									"key": "node-id",
									"value": "<string>",
									"description": "(Required) The [Instance ID](#operation/list-instances)."
								}
							]
						},
						"description": "Delete a single nodepool instance from a given Nodepool"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) The [Instance ID](#operation/list-instances)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Recycle a NodePool Instance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id/recycle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"node-pools",
								":nodepool-id",
								"nodes",
								":node-id",
								"recycle"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								},
								{
									"key": "nodepool-id",
									"value": "<string>",
									"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
								},
								{
									"key": "node-id",
									"value": "<string>",
									"description": "(Required) Node ID"
								}
							]
						},
						"description": "Recycle a specific NodePool Instance"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id/recycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id",
										"recycle"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) Node ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id/recycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id",
										"recycle"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) Node ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id/recycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id",
										"recycle"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) Node ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/node-pools/:nodepool-id/nodes/:node-id/recycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"node-pools",
										":nodepool-id",
										"nodes",
										":node-id",
										"recycle"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										},
										{
											"key": "nodepool-id",
											"value": "<string>",
											"description": "(Required) The [NodePool ID](#operation/get-nodepools)."
										},
										{
											"key": "node-id",
											"value": "<string>",
											"description": "(Required) Node ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Kubernetes Cluster Kubeconfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"clusters",
								":vke-id",
								"config"
							],
							"variable": [
								{
									"key": "vke-id",
									"value": "<string>",
									"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
								}
							]
						},
						"description": "Get Kubernetes Cluster Kubeconfig"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"config"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"kube_config\": \"YXBpdmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSblZFTkRRVzF0WjBGM1NVSkJaMGxKU2psdFN6bEViRk5pY0RSM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFVla1ZNVFVGclIwRXhWVVVLUW1oTlExWldUWGhHYWtGVlFtZE9Wa0pCWTFSRVZrNW9ZbWxDUjJOdFJuVlpNbXg2V1RJNGVFVjZRVkpDWjA1V1FrRnZWRU5yZERGWmJWWjVZbTFXTUFwYVdFMTRSWHBCVWtKblRsWkNRVTFVUTJ0ME1WbHRWbmxpYlZZd1dsaE5kMGhvWTA1TmFrVjNUbnBCZVUxVVNYaE5la0Y1VjJoalRrMXFTWGRPZWtGNUNrMVVTWGhOZWtGNVYycENVRTFSYzNkRFVWbEVWbEZSUjBWM1NsWlZla1ZYVFVKUlIwRXhWVVZDZUUxT1ZUSkdkVWxGV25sWlZ6VnFZVmhPYW1KNlJWUUtUVUpGUjBFeFZVVkRhRTFMVXpOV2FWcFlTblZhV0ZKc1kzcEZWRTFDUlVkQk1WVkZRWGhOUzFNelZtbGFXRXAxV2xoU2JHTjZRME5CVTBsM1JGRlpTZ3BMYjFwSmFIWmpUa0ZSUlVKQ1VVRkVaMmRGVUVGRVEwTkJVVzlEWjJkRlFrRk1laTlITXpOaVlWZG5TMU5GVmpKQ2RsQlhZbWd6WkhZclYybEhOVlJqQ2s1bllVTlZNMlJWVm5KdGNtaHVXbVJPYWtkTVl5OUJTR3RIWm1OaVIxQlRXbkJ2UVZCbWFuaGtWRTA0WlVOTFlXdGxkR0Z6YkRsdFNDOVhlVTlETXpnS1pGcEZVWGRSZWpseFIzWnpaa3BTT0RKQ01WWTBWM3AxUVdRMEwxSmtaVGxqU3psaVdIWktkRUZMU2xrNVF6aG9VM2RtTDNNM1drRlNabGxYYTIxb1R3cHZkSHBFUnpaR2JtaFljSFJtUkRZdmRXNXNXRWhyYTNveFVHSjZhR1Z2ZG5adU9GUkNUamR2UWpkTVdUaG9kRE5tVTBJeFEwSlRTMGxxV1hsaGJEaHJDbU5XZVU1R1MyUndVRVoxV0ZvelkyYzRaMHN2ZUROS1VXZHBLMGxqVTA0Mk9GZDJaa3gxYXpjM2JXOXNWWE5IY25neWNWRkZTa2RwU2k5SGEzUm5kMndLWlVnNU1FbHpMMkZDZERjd1dsaG9aM2cyTnpkSmVuTnVWMnN3UWpWSFlVeGpaRk5oYUN0WlNraGthbkpMU0N0R01qVTNWekpvTUVOQmQwVkJRV0ZPYUFwTlJqaDNSR2RaUkZaU01GQkJVVWd2UWtGUlJFRm5TMFZOUWpCSFFURlZaRXBSVVZkTlFsRkhRME56UjBGUlZVWkNkMDFEUW1kbmNrSm5SVVpDVVdORUNrRlVRVkJDWjA1V1NGSk5Ra0ZtT0VWQ1ZFRkVRVkZJTDAxQ01FZEJNVlZrUkdkUlYwSkNVME5EVWtoSmFERm1XbnBzU210MFMwVmtOalpITVZWWGRqQUtNRVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUVU5RFFWRkZRV0V3VG1SUVlYa3dPREp0YVcxWllUa3ZOVVpMY1hWa1YwSmpabVpHVkVScFdrTmljUXA1YVUxNFZXeEVTQzl6Tm1Od1YzbEJORXRuY0ZGRWMySXdiM0pzYTNwTk1ERjNieTlsTUc1clUxTTFVVkIyWVZvNU9FaFNObFlyTUV4a0swZzViM1JCQ2xZM2VUbEdlQzlJVUhCdldGWTJhVWswYWpCaVpFdFBNMHQ0VUZKVWRsaDFRMUZETTNRd2FHc3pjVnBRSzFSalNEaHhWRTV6VkVwb1JGTnlSMWRLUjNvS1dqZ3liMGwwY0c5RVRsaEJZVUpqYmxSRmNUUkNXRzFoTTJVNVJHSkpVMU5SZW5aaGFIYzBWMkZwVTFWNGVYUllVakJ5Um1oaFpFUnpkbFJuVVhZNGF3cEdlbkV5TjNkS2RUaHZUV2hIWTJWb2VGUlRXVUpyWjNGWVUzYzNPR2xsTVZadk1XVlBMMGxTYlhsM1ZtMWlhM2M1TWswcldtZFdOV0Z3VERCNlNYRnNDbFEzWmtkekszWTViREkwYkM4eGFIbExVekZCU1ZKTmVrRkljMGw1YVdWdE1GUkZUM0Z6WVVVNVFYWjBlWEZZZEZKblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9jOTA3ZTgzMi0zMDgwLTQ4YTYtYTU0ZC03Mzc5ZTY0NWMwYjcudnVsdHItazhzLmNvbTo2NDQzCiAgbmFtZTogdmtlCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiB2a2UKICAgIHVzZXI6IGFkbWluCiAgbmFtZTogdmtlCmN1cnJlbnQtY29udGV4dDogdmtlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJWUkVORFFXcHBaMEYzU1VKQlowbEpUVmg0VTFOSGRFRnliR2QzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkVWVrVk1UVUZyUjBFeFZVVUtRbWhOUTFaV1RYaEdha0ZWUW1kT1ZrSkJZMVJFVms1b1ltbENSMk50Um5WWk1teDZXVEk0ZUVWNlFWSkNaMDVXUWtGdlZFTnJkREZaYlZaNVltMVdNQXBhV0UxNFJYcEJVa0puVGxaQ1FVMVVRMnQwTVZsdFZubGliVll3V2xoTmQwaG9ZMDVOYWtWM1RucEJlVTFVU1hoTmVrRjVWMmhqVGsxcVNYZE9la0Y1Q2sxVVNYaE5la0Y1VjJwQ1QwMVJjM2REVVZsRVZsRlJSMFYzU2xaVmVrVlhUVUpSUjBFeFZVVkNlRTFPVlRKR2RVbEZXbmxaVnpWcVlWaE9hbUo2UlZnS1RVSlZSMEV4VlVWRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhFYWtGTlFtZE9Wa0pCVFZSQ1YwWnJZbGRzZFUxSlNVSkpha0ZPUW1kcmNRcG9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhselRIVndNSHBvYXpsUFVHODVWa05TTUZSbmJ6UTFORThyV0hOTVEyUXhDbE5CWVdKNmFtMVJaM1pEVVZKeFdEaEZUa0Z0VW5kbVdFUjNaRkJMWTFkbmFtcHpRaTlQU2pSR2F6TmpWWFZIVVdkNmFrRkRXVVJYVjNBM1RWaG1TM1VLVm5GeVNGTmtZMnhQWVV0dEwwbGpNMEkxWVd0a1pYcGxRVFJ4UzFGRlRrbFVSbXR1VkdSWVJ6RTFVV3MxU2tNMGNIWXpaa3M1ZUhVMldqZHhjVmRXVlFwdmVFMXdjR2huV1hGWFVsUkNSMnByT0hSRk5sbDZOazVZZGs5NkwxVXpNWEprV0ZOVFluYzRWakpxTUdnNU1FTlRMMkZLVkN0U01sRmxNRWh3YkZNeUNsSjBWek0yYlRjMFVGaHpXRGQ2Ym1aTVZWZEpaMGQxYjBvNVdYTkJNRFphUTFSVllrdFNTekV2V0haRmFGZHVPSGRtWTFCblRHTXlRWEJRTnpsMVlYa0taV0phZVV4SmFXOWFXRXRNVERWQ05tcEZaVkZWV2pGWlRFTjNSV0pCTXpWYVdYSm1lRTVCUmsxcFUwcDFTMnhhUlRWSGNYRlJTVVJCVVVGQ2IzcEZkd3BNZWtGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBGdlVYZElVVmxFVmxJd2JFSkNXWGRHUVZsSlMzZFpRa0pSVlVoQmQwbEhRME56UjBGUlZVWkNkMDFDQ2sxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUWpWbUwwdHJVVGxRV1d4WE1uQllUek13V1dSYVZHMUlhbWRhTm10RlFUUmhVelJvVWs4S2NqSldSbHBwUjBoUVluZGFZMjVuZFc1UVRXTnJaRmh2UWs5a1dsVkhkelpoYkUxaVFVOUZhRlpIUVVOSU5IcEhkM2RUUlZrMk5HRTJVV0ZsVFVaSWF3cHZkalU1UW1GclJIZFJkVlprTVdoMk1rcFZkMXB3WTFsTVZUZE5PWGRLWTI5a09FODBNM0EyVGxwTmNrVjBObHB2YmtsSWJGbEpkMGhFTWxWaGVYcHZDamhUVkhWeWNXVm5jakJvYzAwd1ltWlFRbkZzY25CdE9VTXZOV2hVVjJVemJ6STJiRFpNUTBabWFFdzBaamN5VURSaWFYWnNkVTVoYVc5UFp6QXZXVVlLZFVwd09WUjZkMnRuUWtSVE9DOU5hVTFUVDFwSFpVdHlia2hWYlhKa2FGbHpSbTFCVVRCRVRYWlJiMnh1TWtwVlRYSXlkWE4yU0VGcFJGWm9PVkZMWlFwM1lrSlRMMlJ3UW04M09UbEZRWHBpWkdaclpIcG5iVWhDU2k5WU4wVjNNR3B4Tm5Nek5YTkRNMUpqY0dNNFJrd0tMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjJkSlFrRkJTME5CVVVWQmVYTk1kWEF3ZW1ock9VOVFiemxXUTFJd1ZHZHZORFUwVHl0WWMweERaREZUUVdGaWVtcHRVV2QyUTFGU2NWZzRDa1ZPUVcxU2QyWllSSGRrVUV0alYyZHFhbk5DTDA5S05FWnJNMk5WZFVkUlozcHFRVU5aUkZkWGNEZE5XR1pMZFZaeGNraFRaR05zVDJGTGJTOUpZek1LUWpWaGEyUmxlbVZCTkhGTFVVVk9TVlJHYTI1VVpGaEhNVFZSYXpWS1F6Undkak5tU3psNGRUWmFOM0Z4VjFaVmIzaE5jSEJvWjFseFYxSlVRa2RxYXdvNGRFVTJXWG8yVGxoMlQzb3ZWVE14Y21SWVUxTmlkemhXTW1vd2FEa3dRMU12WVVwVUsxSXlVV1V3U0hCc1V6SlNkRmN6Tm0wM05GQlljMWczZW01bUNreFZWMGxuUjNWdlNqbFpjMEV3TmxwRFZGVmlTMUpMTVM5WWRrVm9WMjQ0ZDJaalVHZE1ZekpCY0ZBM09YVmhlV1ZpV25sTVNXbHZXbGhMVEV3MVFqWUtha1ZsVVZWYU1WbE1RM2RGWWtFek5WcFpjbVo0VGtGR1RXbFRTblZMYkZwRk5VZHhjVkZKUkVGUlFVSkJiMGxDUVVKaWN6VXpUQzlJUm5CTmFESmpjd3A1Tm5WdVVFRmpRMHQwU1VzNGVVMXBObll6VkRCWVdVWjVSRTFzTlVGdk5EVnJSVFJhTjNWTlVsZExjbTUxV0VsT1NtdG5WSFE0Tmpndk1FSnVURWMyQ2xVd05tazRaMDlvUkRWME4ySlFkMHRZYlM5eFN6RktUVUY1WkRkSWIzQmhPVE4yYVV0dlNYa3pMemxwWjB4Tk0yRkZkRXB2Vlc5S2NUaDJaMDFxVDNRS2MxWk5aMVJWVmpKVVVYZGFUR056ZEdFNU5YTlphamh1V214S2QyczNhSHBFTmtFemNUSTBhRVJ0YUU1a2FUZ3dSSEJEVDJjMk1IbFpTaXQ2Y0dab1dBcHZORkJPTlhsTVZGaFhkSG80SzJ0UllqaDZaR3B0Wms5a1pHVnJaeTlOTTA1T1pUY3JPRVZHV2tJMWExWkRkbEV3UmxoSVIxRlZPREUzV1dNdlNEZHZDamhpVFZsM2QySlZRbEppTkdobmVWWnZkemxVV2s5YVkwMXVMM2xoYVd3M1JtVmljblpGU2s5dVJtdG9Wa3BoUlRKdVlWSlJjbEJ1TmtORWRVdEdXRGdLUTJNM2JHZGhSVU5uV1VWQmVuZEVURlpFY1UxWlYxcHNiWFJUYzJGdWVGaEJhMnBwUW5GVWFreFhTbGRIZVZSTk0xZEtUM2RzZG1GWk9FTlRiSHB5TkFwelMyOTNOMXByT0doQ1ZXSm1WRFJCV1ZWTlpVRlBSV0p2UkhCTVpYQTBURmxYU0hSUmJuQkpWakY1ZURSMVdWZHlSM28yZVhSemVGbE1MMnRvYTBSMENtUnVRVTFDVTBOdlZXOW1VVWczSzBWa2NHdFpZbGxrYW05bFZuWXdlalpPVG1SQ1ZYSk9VbFpQWlc1NFR6WkllR1JIZDNwSFUxVkRaMWxGUVN0elJXVUtVMk5wU0RSbWIybDVkRlZNWW5VMVJVVmtaM0YwTDFseUszTmtVMjl6TURGTWVtOXpSVU4wZGpFMGJrNHZWVlpIYTI5WE5UUTRVVEpOYmtkeUswSTFLd3BvUkRCME1XTXpXQ3RPT1dOc2FYRXdWVzVGZVhad09DOXhWblJUZGxSYWFscEdOVTFKTXpadWJqWXhVVkkxV0hOcFNEVmhWbWQyUlRoYWNFNTBSbHBsQ21sWlRVNHpRM2R6VjNCb1drMUJTV2hVZDI1S1RVOVZlVXhHVlhWT05rTjNhelJFUlhacVZVTm5XVUZ2UWs5R1MxVldPV1ZZVTNRM1pWYzBlakJCU1VzS1VWRnFhR1V2VFc1cVVVWlZhMmhNUWtsbldsUTRUMjlTY1hWTmMwNVplSEZ4ZUhneVkzTXJUMUZZTld4QmFESlZjME5OVjNwSE5Va3hZbmhPTkd0M1ZRbzRXbVZ4TmtoVlpqTndNMDVZWlc4MFVEUkdhM2R0WlZSaGMxaEdXbkozUW5vM2RXcExhVTFuWjFnd2RFSm9kVmg1YUZVNE5UVllUbU5OZG1weVVUUnFDblo2YWk5cFRGWktWWFkzSzBwc2NrWjRWREZFZFZGTFFtZEhZbkJrVmxoUk1FUjJiRmhtZDJrellrNXJXa1pzZVdZeU0wdDNXbWRHTUVKMGVUTjJORWtLUVU5bFRpOUVVRmx2WTNKMFkwbzFXRGxqWms0d2JsSXphRW95Y2xocU9VWnZTbU5qUTFOU2FDOHllU3RGUVRJMU1scHhNRmgyZEZKMVN6Vm9UVkFyVkFwV0szQkdXU3RSTjNwRVVHeERlRTlzZWpoME5uWjRVblJSVEVSbWRHRk1ORkF5Y2paVmFWaEpWM1Z3UTBwWmREZDBOaXQ1YTFKdWVYZzJiMkUzTHpGS0NtNTJWakZCYjBkQlRtRkZSV1VyZERoNGFXUlFaeXRIUm5FemN6VkhUa1pPU0VKQmMzcG1NV3BxVFdwdmF6ZEtiMmxyWWxaVU1FNUJWVmhLZEdWclNra0taekZPVUd0UVQxSjRWakZWY0dKUGVsUXJhMWhyTjBwVmExTTNiVE0zV0VneWRuUm1abVIxTlhFNVEzWkhObkZaYW1OcVpVOHZSRWhzYUZWRmNrMUpXUXBsVHpSQk9FOUNWRWgwUVRkM01XTjVVa2hIVUZWUE1VRlFiRXRTTWtWVU9XMXVOeXROV0hSRU1GQmxjRWh2TVV0UU9VRTlDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"config"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"config"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/clusters/:vke-id/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"clusters",
										":vke-id",
										"config"
									],
									"variable": [
										{
											"key": "vke-id",
											"value": "<string>",
											"description": "(Required) The [VKE ID](#operation/list-kubernetes-clusters)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Kubernetes Versions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"versions"
							]
						},
						"description": "Get a list of supported Kubernetes versions"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"versions\": [\n\t\t\"v1.20.0+1\"\n\t]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"versions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr Kubernetes Engine is a managed Kubernetes offering."
		},
		{
			"name": "load-balancer",
			"item": [
				{
					"name": "List Load Balancers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List the Load Balancers in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"load_balancers\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"label\": \"Example Load Balancer\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"ipv4\": \"192.0.2.123\",\n\t\t\t\"ipv6\": \"2001:0db8:5:4973:ffff:ffff:ffff:ffff\",\n\t\t\t\"generic_info\": {\n\t\t\t\t\"balancing_algorithm\": \"roundrobin\",\n\t\t\t\t\"ssl_redirect\": false,\n\t\t\t\t\"sticky_sessions\": {\n\t\t\t\t\t\"cookie_name\": \"example-cookie\"\n\t\t\t\t},\n\t\t\t\t\"proxy_protocol\": false,\n\t\t\t\t\"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n\t\t\t},\n\t\t\t\"health_check\": {\n\t\t\t\t\"protocol\": \"http\",\n\t\t\t\t\"port\": 80,\n\t\t\t\t\"path\": \"/health\",\n\t\t\t\t\"check_interval\": 10,\n\t\t\t\t\"response_timeout\": 5,\n\t\t\t\t\"unhealthy_threshold\": 3,\n\t\t\t\t\"healthy_threshold\": 3\n\t\t\t},\n\t\t\t\"has_ssl\": false,\n\t\t\t\"forwarding_rules\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"73d85156c2c3129d\",\n\t\t\t\t\t\"frontend_protocol\": \"http\",\n\t\t\t\t\t\"frontend_port\": 80,\n\t\t\t\t\t\"backend_protocol\": \"http\",\n\t\t\t\t\t\"backend_port\": 80\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"firewall_rules\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"abcd123b93016eafb\",\n\t\t\t\t\t\"port\": 80,\n\t\t\t\t\t\"source\": \"198.51.100.0/24\",\n\t\t\t\t\t\"ip_type\": \"v4\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"instances\": []\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Load Balancer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"balancing_algorithm\": \"<string>\",\n    \"ssl_redirect\": \"<boolean>\",\n    \"proxy_protocol\": \"<boolean>\",\n    \"health_check\": {\n        \"protocol\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"path\": \"<string>\",\n        \"check_interval\": \"<integer>\",\n        \"response_timeout\": \"<integer>\",\n        \"unhealthy_threshold\": \"<integer>\",\n        \"healthy_threshold\": \"<integer>\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"<string>\",\n            \"frontend_port\": \"<integer>\",\n            \"backend_protocol\": \"<string>\",\n            \"backend_port\": \"<integer>\"\n        },\n        {\n            \"frontend_protocol\": \"<string>\",\n            \"frontend_port\": \"<integer>\",\n            \"backend_protocol\": \"<string>\",\n            \"backend_port\": \"<integer>\"\n        }\n    ],\n    \"sticky_session\": {\n        \"cookie_name\": \"<string>\"\n    },\n    \"ssl\": {\n        \"private_key\": \"<string>\",\n        \"certificate\": \"<string>\",\n        \"chain\": \"<string>\"\n    },\n    \"label\": \"<string>\",\n    \"instances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": \"<integer>\",\n            \"source\": \"<string>\",\n            \"ip_type\": \"<string>\"\n        },\n        {\n            \"port\": \"<integer>\",\n            \"source\": \"<string>\",\n            \"ip_type\": \"<string>\"\n        }\n    ],\n    \"private_network\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/load-balancers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers"
							]
						},
						"description": "Create a new Load Balancer in a particular `region`."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"balancing_algorithm\": \"roundrobin\",\n    \"ssl_redirect\": false,\n    \"proxy_protocol\": false,\n    \"label\": \"Example Load Balancer\",\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": 10,\n        \"response_timeout\": 5,\n        \"unhealthy_threshold\": 3,\n        \"healthy_threshold\": 3\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"24.187.16.196/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"load_balancer\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"region\": \"ewr\",\n\t\t\"label\": \"Example Load Balancer\",\n\t\t\"status\": \"pending\",\n\t\t\"ipv4\": \"\",\n\t\t\"ipv6\": \"\",\n\t\t\"generic_info\": {\n\t\t\t\"balancing_algorithm\": \"roundrobin\",\n\t\t\t\"ssl_redirect\": false,\n\t\t\t\"sticky_sessions\": {\n\t\t\t\t\"cookie_name\": \"example-cookie\"\n\t\t\t},\n\t\t\t\"proxy_protocol\": false,\n\t\t\t\"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n\t\t},\n\t\t\"health_check\": {\n\t\t\t\"protocol\": \"http\",\n\t\t\t\"port\": 80,\n\t\t\t\"path\": \"/health\",\n\t\t\t\"check_interval\": 10,\n\t\t\t\"response_timeout\": 5,\n\t\t\t\"unhealthy_threshold\": 3,\n\t\t\t\"healthy_threshold\": 3\n\t\t},\n\t\t\"has_ssl\": false,\n\t\t\"forwarding_rules\": [\n\t\t\t{\n\t\t\t\t\"id\": \"73d85156c2c3129d\",\n\t\t\t\t\"frontend_protocol\": \"http\",\n\t\t\t\t\"frontend_port\": 80,\n\t\t\t\t\"backend_protocol\": \"http\",\n\t\t\t\t\"backend_port\": 80\n\t\t\t}\n\t\t],\n\t\t\"firewall_rules\": [\n\t\t\t{\n\t\t\t\t\"id\": \"abcd123b93016eafb\",\n\t\t\t\t\"port\": 80,\n\t\t\t\t\"source\": \"24.187.16.196/16\",\n\t\t\t\t\"ip_type\": \"v4\"\n\t\t\t}\n\t\t],\n\t\t\"instances\": []\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"balancing_algorithm\": \"roundrobin\",\n    \"ssl_redirect\": false,\n    \"proxy_protocol\": false,\n    \"label\": \"Example Load Balancer\",\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": 10,\n        \"response_timeout\": 5,\n        \"unhealthy_threshold\": 3,\n        \"healthy_threshold\": 3\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"24.187.16.196/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"balancing_algorithm\": \"roundrobin\",\n    \"ssl_redirect\": false,\n    \"proxy_protocol\": false,\n    \"label\": \"Example Load Balancer\",\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": 10,\n        \"response_timeout\": 5,\n        \"unhealthy_threshold\": 3,\n        \"healthy_threshold\": 3\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"24.187.16.196/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"balancing_algorithm\": \"roundrobin\",\n    \"ssl_redirect\": false,\n    \"proxy_protocol\": false,\n    \"label\": \"Example Load Balancer\",\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": 10,\n        \"response_timeout\": 5,\n        \"unhealthy_threshold\": 3,\n        \"healthy_threshold\": 3\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"24.187.16.196/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"balancing_algorithm\": \"roundrobin\",\n    \"ssl_redirect\": false,\n    \"proxy_protocol\": false,\n    \"label\": \"Example Load Balancer\",\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": 10,\n        \"response_timeout\": 5,\n        \"unhealthy_threshold\": 3,\n        \"healthy_threshold\": 3\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"24.187.16.196/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Load Balancer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								}
							]
						},
						"description": "Get information for a Load Balancer."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"load_balancer\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"region\": \"ewr\",\n\t\t\"label\": \"Example Load Balancer\",\n\t\t\"status\": \"active\",\n\t\t\"ipv4\": \"192.0.2.123\",\n\t\t\"ipv6\": \"2001:0db8:5:4973:ffff:ffff:ffff:ffff\",\n\t\t\"generic_info\": {\n\t\t\t\"balancing_algorithm\": \"roundrobin\",\n\t\t\t\"ssl_redirect\": false,\n\t\t\t\"sticky_sessions\": {\n\t\t\t\t\"cookie_name\": \"example-cookie\"\n\t\t\t},\n\t\t\t\"proxy_protocol\": false,\n\t\t\t\"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n\t\t},\n\t\t\"health_check\": {\n\t\t\t\"protocol\": \"http\",\n\t\t\t\"port\": 80,\n\t\t\t\"path\": \"/health\",\n\t\t\t\"check_interval\": 10,\n\t\t\t\"response_timeout\": 5,\n\t\t\t\"unhealthy_threshold\": 3,\n\t\t\t\"healthy_threshold\": 3\n\t\t},\n\t\t\"has_ssl\": false,\n\t\t\"forwarding_rules\": [\n\t\t\t{\n\t\t\t\t\"id\": \"73d85156c2c3129d\",\n\t\t\t\t\"frontend_protocol\": \"http\",\n\t\t\t\t\"frontend_port\": 80,\n\t\t\t\t\"backend_protocol\": \"http\",\n\t\t\t\t\"backend_port\": 80\n\t\t\t}\n\t\t],\n\t\t\"firewall_rules\": [\n\t\t\t{\n\t\t\t\t\"id\": \"abcd123b93016eafb\",\n\t\t\t\t\"port\": 80,\n\t\t\t\t\"source\": \"198.51.100.0/24\",\n\t\t\t\t\"ip_type\": \"v4\"\n\t\t\t}\n\t\t],\n\t\t\"instances\": []\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Load Balancer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ssl\": {\n        \"private_key\": \"<string>\",\n        \"certificate\": \"<string>\",\n        \"chain\": \"<string>\"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"<string>\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"<string>\",\n            \"frontend_port\": \"<integer>\",\n            \"backend_protocol\": \"<string>\",\n            \"backend_port\": \"<integer>\"\n        },\n        {\n            \"frontend_protocol\": \"<string>\",\n            \"frontend_port\": \"<integer>\",\n            \"backend_protocol\": \"<string>\",\n            \"backend_port\": \"<integer>\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"path\": \"<string>\",\n        \"check_interval\": \"<string>\",\n        \"response_timeout\": \"<string>\",\n        \"unhealthy_threshold\": \"<string>\",\n        \"healthy_threshold\": \"<string>\"\n    },\n    \"proxy_protocol\": \"<boolean>\",\n    \"ssl_redirect\": \"<boolean>\",\n    \"balancing_algorithm\": \"<string>\",\n    \"instances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"label\": \"<string>\",\n    \"private_network\": \"<string>\",\n    \"firewall_rules\": [\n        {\n            \"port\": \"<integer>\",\n            \"source\": \"<string>\",\n            \"ip_type\": \"<string>\"\n        },\n        {\n            \"port\": \"<integer>\",\n            \"source\": \"<string>\",\n            \"ip_type\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								}
							]
						},
						"description": "Update information for a Load Balancer. All attributes are optional. If not set, the attributes will retain their original values."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssl\": {\n        \"private_key\": \"-----BEGIN RSA ... \",\n        \"certificate\": \"-----BEGIN RSA ... \",\n        \"chain\": \"-----BEGIN RSA ... \"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"example-cookie\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"192.168.1.1/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": \"10\",\n        \"response_timeout\": \"5\",\n        \"unhealthy_threshold\": \"3\",\n        \"healthy_threshold\": \"3\"\n    },\n    \"proxy_protocol\": true,\n    \"ssl_redirect\": true,\n    \"balancing_algorithm\": \"roundrobin\",\n    \"instances\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssl\": {\n        \"private_key\": \"-----BEGIN RSA ... \",\n        \"certificate\": \"-----BEGIN RSA ... \",\n        \"chain\": \"-----BEGIN RSA ... \"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"example-cookie\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"192.168.1.1/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": \"10\",\n        \"response_timeout\": \"5\",\n        \"unhealthy_threshold\": \"3\",\n        \"healthy_threshold\": \"3\"\n    },\n    \"proxy_protocol\": true,\n    \"ssl_redirect\": true,\n    \"balancing_algorithm\": \"roundrobin\",\n    \"instances\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssl\": {\n        \"private_key\": \"-----BEGIN RSA ... \",\n        \"certificate\": \"-----BEGIN RSA ... \",\n        \"chain\": \"-----BEGIN RSA ... \"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"example-cookie\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"192.168.1.1/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": \"10\",\n        \"response_timeout\": \"5\",\n        \"unhealthy_threshold\": \"3\",\n        \"healthy_threshold\": \"3\"\n    },\n    \"proxy_protocol\": true,\n    \"ssl_redirect\": true,\n    \"balancing_algorithm\": \"roundrobin\",\n    \"instances\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssl\": {\n        \"private_key\": \"-----BEGIN RSA ... \",\n        \"certificate\": \"-----BEGIN RSA ... \",\n        \"chain\": \"-----BEGIN RSA ... \"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"example-cookie\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"192.168.1.1/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": \"10\",\n        \"response_timeout\": \"5\",\n        \"unhealthy_threshold\": \"3\",\n        \"healthy_threshold\": \"3\"\n    },\n    \"proxy_protocol\": true,\n    \"ssl_redirect\": true,\n    \"balancing_algorithm\": \"roundrobin\",\n    \"instances\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ssl\": {\n        \"private_key\": \"-----BEGIN RSA ... \",\n        \"certificate\": \"-----BEGIN RSA ... \",\n        \"chain\": \"-----BEGIN RSA ... \"\n    },\n    \"sticky_session\": {\n        \"cookie_name\": \"example-cookie\"\n    },\n    \"forwarding_rules\": [\n        {\n            \"frontend_protocol\": \"http\",\n            \"frontend_port\": 80,\n            \"backend_protocol\": \"http\",\n            \"backend_port\": 80\n        }\n    ],\n    \"firewall_rules\": [\n        {\n            \"port\": 80,\n            \"source\": \"192.168.1.1/16\",\n            \"ip_type\": \"v4\"\n        }\n    ],\n    \"health_check\": {\n        \"protocol\": \"http\",\n        \"port\": 80,\n        \"path\": \"/health\",\n        \"check_interval\": \"10\",\n        \"response_timeout\": \"5\",\n        \"unhealthy_threshold\": \"3\",\n        \"healthy_threshold\": \"3\"\n    },\n    \"proxy_protocol\": true,\n    \"ssl_redirect\": true,\n    \"balancing_algorithm\": \"roundrobin\",\n    \"instances\": [\n        \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    ],\n    \"private_network\": \"9fed374c-0afc-42bf-926c-abcf840b5406\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Load Balancer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								}
							]
						},
						"description": "Delete a Load Balancer."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Forwarding Rules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id",
								"forwarding-rules"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								}
							]
						},
						"description": "List the fowarding rules for a Load Balancer."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"forwarding_rules\": [\n\t\t{\n\t\t\t\"id\": \"443f2e6c0b60\",\n\t\t\t\"frontend_protocol\": \"http\",\n\t\t\t\"frontend_port\": 80,\n\t\t\t\"backend_protocol\": \"http\",\n\t\t\t\"backend_port\": 80\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Forwarding Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"frontend_protocol\": \"<string>\",\n    \"frontend_port\": \"<integer>\",\n    \"backend_protocol\": \"<string>\",\n    \"backend_port\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id",
								"forwarding-rules"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								}
							]
						},
						"description": "Create a new forwarding rule for a Load Balancer."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frontend_protocol\": \"http\",\n    \"frontend_port\": 8080,\n    \"backend_protocol\": \"http\",\n    \"backend_port\": 80\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frontend_protocol\": \"http\",\n    \"frontend_port\": 8080,\n    \"backend_protocol\": \"http\",\n    \"backend_port\": 80\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frontend_protocol\": \"http\",\n    \"frontend_port\": 8080,\n    \"backend_protocol\": \"http\",\n    \"backend_port\": 80\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frontend_protocol\": \"http\",\n    \"frontend_port\": 8080,\n    \"backend_protocol\": \"http\",\n    \"backend_port\": 80\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frontend_protocol\": \"http\",\n    \"frontend_port\": 8080,\n    \"backend_protocol\": \"http\",\n    \"backend_port\": 80\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Forwarding Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id",
								"forwarding-rules",
								":forwarding-rule-id"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								},
								{
									"key": "forwarding-rule-id",
									"value": "<string>",
									"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
								}
							]
						},
						"description": "Get information for a Forwarding Rule on a Load Balancer."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"forwarding_rule\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"frontend_protocol\": \"http\",\n\t\t\"frontend_port\": 8080,\n\t\t\"backend_protocol\": \"http\",\n\t\t\"backend_port\": 80\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Forwarding Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":load-balancer-id",
								"forwarding-rules",
								":forwarding-rule-id"
							],
							"variable": [
								{
									"key": "load-balancer-id",
									"value": "<string>",
									"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
								},
								{
									"key": "forwarding-rule-id",
									"value": "<string>",
									"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
								}
							]
						},
						"description": "Delete a Forwarding Rule on a Load Balancer."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:load-balancer-id/forwarding-rules/:forwarding-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":load-balancer-id",
										"forwarding-rules",
										":forwarding-rule-id"
									],
									"variable": [
										{
											"key": "load-balancer-id",
											"value": "<string>",
											"description": "(Required) The [Load Balancer id](#operation/list-load-balancers)."
										},
										{
											"key": "forwarding-rule-id",
											"value": "<string>",
											"description": "(Required) The [Forwarding Rule id](#operation/list-load-balancer-forwarding-rules)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Firewall Rules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":loadbalancer-id",
								"firewall-rules"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<string>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "loadbalancer-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "List the firewall rules for a Load Balancer."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules?per_page=<string>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_rules\": [\n\t\t{\n\t\t\t\"id\": \"asb123f2e6c0b60\",\n\t\t\t\"port\": 80,\n\t\t\t\"source\": \"24.187.16.196/16\",\n\t\t\t\"ip_type\": \"v4\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules?per_page=<string>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules?per_page=<string>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules?per_page=<string>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Firewall Rule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules/:firewall-rule-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"load-balancers",
								":loadbalancer-id",
								"firewall-rules",
								":firewall-rule-id"
							],
							"variable": [
								{
									"key": "loadbalancer-id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "firewall-rule-id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get a firewall rule for a Load Balancer."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"firewall_rule\": {\n\t\t\"id\": \"asb123f2e6c0b60\",\n\t\t\"port\": 80,\n\t\t\"source\": \"24.187.16.196/16\",\n\t\t\"ip_type\": \"v4\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/load-balancers/:loadbalancer-id/firewall-rules/:firewall-rule-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"load-balancers",
										":loadbalancer-id",
										"firewall-rules",
										":firewall-rule-id"
									],
									"variable": [
										{
											"key": "loadbalancer-id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "firewall-rule-id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "[Load Balancers](https://www.vultr.com/docs/vultr-load-balancers) sit in front of your application and distribute incoming traffic across multiple Instances. When you control the load balancer via the API, you can inspect the results in the [customer portal](https://my.vultr.com/loadbalancers/).\n"
		},
		{
			"name": "s3",
			"item": [
				{
					"name": "List Object Storages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/object-storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Object Storage in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"object_storages\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"cluster_id\": 2,\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"label\": \"Example Object Storage\",\n\t\t\t\"status\": \"active\",\n\t\t\t\"s3_hostname\": \"ewr1.vultrobjects.com\",\n\t\t\t\"s3_access_key\": \"00example11223344\",\n\t\t\t\"s3_secret_key\": \"00example1122334455667788990011\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Object Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cluster_id\": \"<integer>\",\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/object-storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage"
							]
						},
						"description": "Create new Object Storage. The `cluster_id` attribute is required."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Object Storage\",\n    \"cluster_id\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"object_storage\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"cluster_id\": 2,\n\t\t\"region\": \"ewr\",\n\t\t\"location\": \"New Jersey\",\n\t\t\"label\": \"Example Object Storage\",\n\t\t\"status\": \"pending\",\n\t\t\"s3_hostname\": \"ewr1.vultrobjects.com\",\n\t\t\"s3_access_key\": \"00example11223344\",\n\t\t\"s3_secret_key\": \"00example1122334455667788990011\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Object Storage\",\n    \"cluster_id\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Object Storage\",\n    \"cluster_id\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Example Object Storage\",\n    \"cluster_id\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Object Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/object-storage/:object-storage-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage",
								":object-storage-id"
							],
							"variable": [
								{
									"key": "object-storage-id",
									"value": "<string>",
									"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
								}
							]
						},
						"description": "Get information about an Object Storage."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"object_storage\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"cluster_id\": 2,\n\t\t\"region\": \"ewr\",\n\t\t\"label\": \"Example Object Storage\",\n\t\t\"status\": \"active\",\n\t\t\"s3_hostname\": \"ewr1.vultrobjects.com\",\n\t\t\"s3_access_key\": \"00example11223344\",\n\t\t\"s3_secret_key\": \"00example1122334455667788990011\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Object Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/object-storage/:object-storage-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage",
								":object-storage-id"
							],
							"variable": [
								{
									"key": "object-storage-id",
									"value": "<string>",
									"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
								}
							]
						},
						"description": "Delete an Object Storage."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Object Storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/object-storage/:object-storage-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage",
								":object-storage-id"
							],
							"variable": [
								{
									"key": "object-storage-id",
									"value": "<string>",
									"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
								}
							]
						},
						"description": "Update the label for an Object Storage."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Object Storage Label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Object Storage Label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Object Storage Label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Object Storage Label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Updated Object Storage Label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Regenerate Object Storage Keys",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/object-storage/:object-storage-id/regenerate-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage",
								":object-storage-id",
								"regenerate-keys"
							],
							"variable": [
								{
									"key": "object-storage-id",
									"value": "<string>",
									"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
								}
							]
						},
						"description": "Regenerate the keys for an Object Storage."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id/regenerate-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id",
										"regenerate-keys"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"s3_credentials\": {\n\t\t\"s3_hostname\": \"ewr1.vultrobjects.com\",\n\t\t\"s3_access_key\": \"00example11223344\",\n\t\t\"s3_secret_key\": \"00example1122334455667788990011\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id/regenerate-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id",
										"regenerate-keys"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id/regenerate-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id",
										"regenerate-keys"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/:object-storage-id/regenerate-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										":object-storage-id",
										"regenerate-keys"
									],
									"variable": [
										{
											"key": "object-storage-id",
											"value": "<string>",
											"description": "(Required) The [Object Storage id](#operation/list-object-storages)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Clusters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/object-storage/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object-storage",
								"clusters"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Object Storage Clusters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object-storage/clusters?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object-storage",
										"clusters"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"clusters\": [\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"hostname\": \"ewr1.vultrobjects.com\",\n\t\t\t\"deploy\": \"yes\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"description": "[Object Storage](https://www.vultr.com/docs/vultr-object-storage) is S3 API compatible. Objects uploaded to object storage can be accessed privately or publicly on the web. Object storage supports a virtually unlimited number of objects. Control your Object Storage via the API or browse in the [Customer Portal](https://my.vultr.com/objectstorage/).\n"
		},
		{
			"name": "os",
			"item": [
				{
					"name": "List OS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/os",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"os"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List the OS images available for installation at Vultr."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/os?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"os"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"os\": [\n\t\t{\n\t\t\t\"id\": 127,\n\t\t\t\"name\": \"CentOS 6 x64\",\n\t\t\t\"arch\": \"x64\",\n\t\t\t\"family\": \"centos\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"description": "We have a wide range of [operating systems](https://www.vultr.com/features/operating-systems/) available to deploy server instances. You can also [upload an ISO](#tag/iso) or choose from our public ISO library.\n"
		},
		{
			"name": "plans",
			"item": [
				{
					"name": "List Plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/plans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plans"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter the results by type.\n\n|   | Type | Description |\n| - | ------ | ------------- |\n|   | all | All available plan types |\n|   | vc2 | Cloud Compute |\n|   | vhf | High Frequency Compute |\n|   | vdc | Dedicated Cloud |",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								},
								{
									"key": "os",
									"value": "<string>",
									"description": "Filter the results by operating system.\n\n|   | Type | Description |\n| - | ------ | ------------- |\n|   | windows | All available plans that support windows |",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all VPS plans at Vultr. The list can be filtered by `type`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plans?type=<string>&per_page=<integer>&cursor=<string>&os=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plans"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "os",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"plans\": [\n\t\t{\n\t\t\t\"id\": \"vhf-8c-32gb\",\n\t\t\t\"vcpu_count\": 8,\n\t\t\t\"ram\": 32768,\n\t\t\t\"disk\": 512,\n\t\t\t\"disk_count\": 1,\n\t\t\t\"bandwidth\": 6144,\n\t\t\t\"monthly_cost\": 192,\n\t\t\t\"type\": \"vhf\",\n\t\t\t\"locations\": [\n\t\t\t\t\"sea\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				},
				{
					"name": "List Bare Metal Plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/plans-metal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plans-metal"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<string>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Bare Metal plans at Vultr."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plans-metal?per_page=<string>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plans-metal"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"plans_metal\": [\n\t\t{\n\t\t\t\"id\": \"vbm-4c-32gb\",\n\t\t\t\"cpu_count\": 4,\n\t\t\t\"cpu_threads\": 8,\n\t\t\t\"cpu_model\": \"E3-1270v6\",\n\t\t\t\"ram\": 32768,\n\t\t\t\"disk\": 240,\n\t\t\t\"disk_count\": 2,\n\t\t\t\"bandwidth\": 5120,\n\t\t\t\"monthly_cost\": 300,\n\t\t\t\"type\": \"SSD\",\n\t\t\t\"locations\": [\n\t\t\t\t\"ewr\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				}
			],
			"description": "A Plan is a particular configuration of vCPU, RAM, SSD, and bandwidth to deploy an [Instance](#tag/instances). Not all Plans are available in all [Regions](#tag/region). You can browse plans in the [Customer Portal](https://my.vultr.com/deploy/) or get a list of Plans from the API.\n"
		},
		{
			"name": "private Networks",
			"item": [
				{
					"name": "Get a private network",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/private-networks/:network-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"private-networks",
								":network-id"
							],
							"variable": [
								{
									"key": "network-id",
									"value": "<string>",
									"description": "(Required) The [Network id](#operation/list-networks)."
								}
							]
						},
						"description": "Get information about a Private Network."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"network\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"region\": \"ewr\",\n\t\t\"description\": \"Example Network Description\",\n\t\t\"v4_subnet\": \"10.99.0.0\",\n\t\t\"v4_subnet_mask\": 24\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a private network",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/private-networks/:network-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"private-networks",
								":network-id"
							],
							"variable": [
								{
									"key": "network-id",
									"value": "<string>",
									"description": "(Required) The [Network id](#operation/list-networks)."
								}
							]
						},
						"description": "Delete a Private Network."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a Private Network",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/private-networks/:network-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"private-networks",
								":network-id"
							],
							"variable": [
								{
									"key": "network-id",
									"value": "<string>",
									"description": "(Required) The [Network id](#operation/list-networks)."
								}
							]
						},
						"description": "Update information for a Private Network."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Private Network\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Private Network\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Private Network\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Private Network\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Private Network\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks/:network-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks",
										":network-id"
									],
									"variable": [
										{
											"key": "network-id",
											"value": "<string>",
											"description": "(Required) The [Network id](#operation/list-networks)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Private Networks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/private-networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"private-networks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Private Networks in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"networks\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"description\": \"Example Network Description\",\n\t\t\t\"v4_subnet\": \"10.99.0.0\",\n\t\t\t\"v4_subnet_mask\": 24\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/private-networks?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a Private Network",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"description\": \"<string>\",\n    \"v4_subnet\": \"<string>\",\n    \"v4_subnet_mask\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/private-networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"private-networks"
							]
						},
						"description": "Create a new Private Network in a `region`. Private networks should use [RFC1918 private address space](https://tools.ietf.org/html/rfc1918):\n\n    10.0.0.0    - 10.255.255.255  (10/8 prefix)\n    172.16.0.0  - 172.31.255.255  (172.16/12 prefix)\n    192.168.0.0 - 192.168.255.255 (192.168/16 prefix)\n"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"description\": \"Example Private Network\",\n    \"v4_subnet\": \"10.99.0.0\",\n    \"v4_subnet_mask\": 24\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"network\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"region\": \"ewr\",\n\t\t\"description\": \"Example Private Network\",\n\t\t\"v4_subnet\": \"10.99.0.0\",\n\t\t\"v4_subnet_mask\": 24\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"description\": \"Example Private Network\",\n    \"v4_subnet\": \"10.99.0.0\",\n    \"v4_subnet_mask\": 24\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"description\": \"Example Private Network\",\n    \"v4_subnet\": \"10.99.0.0\",\n    \"v4_subnet_mask\": 24\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"description\": \"Example Private Network\",\n    \"v4_subnet\": \"10.99.0.0\",\n    \"v4_subnet_mask\": 24\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/private-networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"private-networks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "[Private Networks](https://www.vultr.com/docs/configuring-private-network) are fully isolated networks accessible only by instances on your account. Each private network is only available in one Region and cannot span across regions. An [instance](#tag/instances) can connect to [multiple private networks](https://www.vultr.com/docs/multiple-private-networks) and you may have up to 5 private networks per [region](#tag/region).\n"
		},
		{
			"name": "reserved-ip",
			"item": [
				{
					"name": "Get Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips",
								":reserved-ip"
							],
							"variable": [
								{
									"key": "reserved-ip",
									"value": "<string>",
									"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
								}
							]
						},
						"description": "Get information about a Reserved IP."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"reserved_ip\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"region\": \"ewr\",\n\t\t\"ip_type\": \"v4\",\n\t\t\"subnet\": \"192.0.2.123\",\n\t\t\"subnet_size\": 32,\n\t\t\"label\": \"Example Reserved IPv4\",\n\t\t\"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips",
								":reserved-ip"
							],
							"variable": [
								{
									"key": "reserved-ip",
									"value": "<string>",
									"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
								}
							]
						},
						"description": "Delete a Reserved IP."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Reserved IPs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reserved-ips",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all Reserved IPs in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"reserved_ips\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"ip_type\": \"v4\",\n\t\t\t\"subnet\": \"192.0.2.123\",\n\t\t\t\"subnet_size\": 32,\n\t\t\t\"label\": \"Example Reserved IPv4\",\n\t\t\t\"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"region\": \"ewr\",\n\t\t\t\"ip_type\": \"v6\",\n\t\t\t\"subnet\": \"2001:0db8:5:5157::\",\n\t\t\t\"subnet_size\": 64,\n\t\t\t\"label\": \"Example Reserved IPv6\",\n\t\t\t\"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 2,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"region\": \"<string>\",\n    \"ip_type\": \"<string>\",\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reserved-ips",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips"
							]
						},
						"description": "Create a new Reserved IP. The `region` and `ip_type` attributes are required."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"ip_type\": \"v4\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"reserved_ip\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"region\": \"ewr\",\n\t\t\"ip_type\": \"v4\",\n\t\t\"subnet\": \"192.0.2.123\",\n\t\t\"subnet_size\": 32,\n\t\t\"label\": \"Example Reserved IPv4\",\n\t\t\"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"ip_type\": \"v4\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"ip_type\": \"v4\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"region\": \"ewr\",\n    \"ip_type\": \"v4\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Attach Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/attach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips",
								":reserved-ip",
								"attach"
							],
							"variable": [
								{
									"key": "reserved-ip",
									"value": "<string>",
									"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
								}
							]
						},
						"description": "Attach a Reserved IP to an compute instance or a baremetal instance - `instance_id`."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"attach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"attach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"attach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/attach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"attach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Detach Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/detach",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips",
								":reserved-ip",
								"detach"
							],
							"variable": [
								{
									"key": "reserved-ip",
									"value": "<string>",
									"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
								}
							]
						},
						"description": "Detach a Reserved IP."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"detach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"detach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"detach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/:reserved-ip/detach",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										":reserved-ip",
										"detach"
									],
									"variable": [
										{
											"key": "reserved-ip",
											"value": "<string>",
											"description": "(Required) The [Reserved IP id](#operation/list-reserved-ips)"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Convert Instance IP to Reserved IP",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip_address\": \"<string>\",\n    \"label\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reserved-ips/convert",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reserved-ips",
								"convert"
							]
						},
						"description": "Convert the `ip_address` of an existing [instance](#operation/list-instances) into a Reserved IP."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_address\": \"192.0.2.123\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/convert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										"convert"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"reserved_ip\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"region\": \"ewr\",\n\t\t\"ip_type\": \"v4\",\n\t\t\"subnet\": \"192.0.2.123\",\n\t\t\"subnet_size\": 64,\n\t\t\"label\": \"Example Reserved IPv4\",\n\t\t\"instance_id\": \"3f26dfe9-6a18-4f3d-a543-0cbca7a3e496\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_address\": \"192.0.2.123\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/convert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										"convert"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_address\": \"192.0.2.123\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/convert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										"convert"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ip_address\": \"192.0.2.123\",\n    \"label\": \"Example Reserved IPv4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reserved-ips/convert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reserved-ips",
										"convert"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "IP addresses can be [reserved](https://my.vultr.com/network/) and moved between [instances](#tag/instances). Reserved IPs can also be used as [floating addresses](https://www.vultr.com/docs/high-availability-on-vultr-with-floating-ip-and-bgp) for high-availability.\n"
		},
		{
			"name": "region",
			"item": [
				{
					"name": "List Regions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/regions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"regions"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all Regions at Vultr."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/regions?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"regions\": [\n\t\t{\n\t\t\t\"id\": \"ams\",\n\t\t\t\"city\": \"Amsterdam\",\n\t\t\t\"country\": \"NL\",\n\t\t\t\"continent\": \"Europe\",\n\t\t\t\"options\": [\n\t\t\t\t\"ddos_protection\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						}
					]
				},
				{
					"name": "List available compute in region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/regions/:region-id/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"regions",
								":region-id",
								"availability"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter the results by type.\n\n|   | Type | Description |\n| - | ------ | ------------- |\n|   | all | All available types |\n|   | vc2 | Cloud Compute |\n|   | vdc | Dedicated Cloud |\n|   | vhf | High Frequency Compute |\n|   | vbm | Bare Metal |\n",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "region-id",
									"value": "<string>",
									"description": "(Required) The [Region id](#operation/list-regions)."
								}
							]
						},
						"description": "Get a list of the available plans in Region `region-id`. Not all plans are available in all regions. The list can be filtered by `type`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/regions/:region-id/availability?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"regions",
										":region-id",
										"availability"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "region-id",
											"value": "<string>",
											"description": "(Required) The [Region id](#operation/list-regions)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"available_plans\": [\n\t\t\"vc2-1c-1gb\",\n\t\t\"vc2-1c-2gb\",\n\t\t\"vc2-2c-4gb\",\n\t\t\"vc2-4c-8gb\",\n\t\t\"vc2-6c-16gb\",\n\t\t\"vc2-8c-32gb\",\n\t\t\"vc2-16c-64gb\",\n\t\t\"vc2-24c-96gb\",\n\t\t\"vdc-4vcpu-8gb\",\n\t\t\"vdc-4vcpu-16gb\",\n\t\t\"vdc-6vcpu-24gb\",\n\t\t\"vdc-8vcpu-32gb\",\n\t\t\"vhf-1c-1gb\",\n\t\t\"vhf-1c-2gb\",\n\t\t\"vhf-2c-4gb\",\n\t\t\"vhf-3c-8gb\",\n\t\t\"vhf-4c-16gb\",\n\t\t\"vhf-6c-24gb\",\n\t\t\"vhf-8c-32gb\",\n\t\t\"vhf-12c-48gb\"\n\t]\n}"
						}
					]
				}
			],
			"description": "Instances can be deployed in many [Regions](https://www.vultr.com/features/datacenter-locations/) on multiple continents. Choose any of our worldwide locations to deploy servers near your office or customers for low-latency."
		},
		{
			"name": "snapshot",
			"item": [
				{
					"name": "Delete Snapshot",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots/:snapshot-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots",
								":snapshot-id"
							],
							"variable": [
								{
									"key": "snapshot-id",
									"value": "<string>",
									"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
								}
							]
						},
						"description": "Delete a Snapshot."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Snapshot",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots/:snapshot-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots",
								":snapshot-id"
							],
							"variable": [
								{
									"key": "snapshot-id",
									"value": "<string>",
									"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
								}
							]
						},
						"description": "Get information about a Snapshot."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"snapshot\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"description\": \"Example Snapshot\",\n\t\t\"size\": 42949672960,\n\t\t\"compressed_size\": 949678560,\n\t\t\"status\": \"complete\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Snapshot",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/snapshots/:snapshot-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots",
								":snapshot-id"
							],
							"variable": [
								{
									"key": "snapshot-id",
									"value": "<string>",
									"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
								}
							]
						},
						"description": "Update the description for a Snapshot."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots/:snapshot-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":snapshot-id"
									],
									"variable": [
										{
											"key": "snapshot-id",
											"value": "<string>",
											"description": "(Required) The [Snapshot id](#operation/list-snapshots)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Snapshots",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get information about all Snapshots in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"snapshots\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"description\": \"Example Snapshot\",\n\t\t\t\"size\": 42949672960,\n\t\t\t\"compressed_size\": 949678560,\n\t\t\t\"status\": \"complete\",\n\t\t\t\"os_id\": 215,\n\t\t\t\"app_id\": 0\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshots?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Snapshot",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instance_id\": \"<string>\",\n    \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/snapshots",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots"
							]
						},
						"description": "Create a new Snapshot for `instance_id`."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"snapshot\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"description\": \"Example Snapshot\",\n\t\t\"size\": 0,\n\t\t\"compressed_size\": 0,\n\t\t\"status\": \"pending\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"instance_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n    \"description\": \"Example Snapshot\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshots",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Snapshot from URL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/snapshot/create-from-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"create-from-url"
							]
						},
						"description": "Create a new Snapshot from a RAW image located at `url`."
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/disk_image.raw\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/create-from-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"create-from-url"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"snapshot\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"description\": \"Example Snapshot\",\n\t\t\"size\": 0,\n\t\t\"compressed_size\": 0,\n\t\t\"status\": \"pending\",\n\t\t\"os_id\": 215,\n\t\t\"app_id\": 0\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/disk_image.raw\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/create-from-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"create-from-url"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/disk_image.raw\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/create-from-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"create-from-url"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/disk_image.raw\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/create-from-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"create-from-url"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "A snapshot is a point-in-time image of an instance. We do not stop the instance when taking a snapshot. Booting from a snapshot is similar to rebooting after a non-graceful restart. Snapshots are physically the same as [backups](#tag/backup), but snapshots are manual while backups run automatically on a schedule. See our [Snapshot Quickstart Guide](https://www.vultr.com/docs/vultr-vps-snapshots) for more information.\n"
		},
		{
			"name": "ssh",
			"item": [
				{
					"name": "Get SSH Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-keys",
								":ssh-key-id"
							],
							"variable": [
								{
									"key": "ssh-key-id",
									"value": "<string>",
									"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
								}
							]
						},
						"description": "Get information about an SSH Key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ssh_key\": {\n\t\t\"id\": \"3b8066a7-b438-455a-9688-44afc9a3597f\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"name\": \"Example SSH Key\",\n\t\t\"ssh_key\": \"ssh-rsa AA... user@example.com\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update SSH Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"ssh_key\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-keys",
								":ssh-key-id"
							],
							"variable": [
								{
									"key": "ssh-key-id",
									"value": "<string>",
									"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
								}
							]
						},
						"description": "Update an SSH Key. The attributes `name` and `ssh_key` are optional. If not set, the attributes will retain their original values. New deployments will use the updated key, but this action does not update previously deployed instances."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete SSH Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-keys",
								":ssh-key-id"
							],
							"variable": [
								{
									"key": "ssh-key-id",
									"value": "<string>",
									"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
								}
							]
						},
						"description": "Delete an SSH Key."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys/:ssh-key-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys",
										":ssh-key-id"
									],
									"variable": [
										{
											"key": "ssh-key-id",
											"value": "<string>",
											"description": "(Required) The [SSH Key id](#operation/list-ssh-keys)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List SSH Keys",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ssh-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.\n",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "List all SSH Keys in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ssh_keys\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"name\": \"Example SSH Key\",\n\t\t\t\"ssh_key\": \"ssh-rsa AA... user@example.com\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ssh-keys?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create SSH key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"ssh_key\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssh-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssh-keys"
							]
						},
						"description": "Create a new SSH Key for use with future instances. This does not update any running instances."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ssh_key\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"name\": \"Example SSH Key\",\n\t\t\"ssh_key\": \"ssh-rsa AA... user@example.com\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SSH Key\",\n    \"ssh_key\": \"ssh-rsa AA... user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssh-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssh-keys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "You can add [SSH keys](https://www.vultr.com/docs/how-do-i-generate-ssh-keys/) to your [account](https://my.vultr.com/settings/#settingssshkeys), which can be copied to new instances when first deployed. Updating a key does not update any running instances. If you [reinstall](#operation/reinstall-instance) an instance (erasing all its data), it will inherit the updated key."
		},
		{
			"name": "startup",
			"item": [
				{
					"name": "Get Startup Script",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/startup-scripts/:startup-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-scripts",
								":startup-id"
							],
							"variable": [
								{
									"key": "startup-id",
									"value": "<string>",
									"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
								}
							]
						},
						"description": "Get information for a Startup Script."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"startup_script\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"date_modified\": \"2020-10-10T01:59:20+00:00\",\n\t\t\"name\": \"Example Startup Script\",\n\t\t\"type\": \"pxe\",\n\t\t\"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Startup Script",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/startup-scripts/:startup-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-scripts",
								":startup-id"
							],
							"variable": [
								{
									"key": "startup-id",
									"value": "<string>",
									"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
								}
							]
						},
						"description": "Delete a Startup Script."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Startup Script",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"script\": \"<string>\",\n    \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/startup-scripts/:startup-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-scripts",
								":startup-id"
							],
							"variable": [
								{
									"key": "startup-id",
									"value": "<string>",
									"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
								}
							]
						},
						"description": "Update a Startup Script. The attributes `name` and `script` are optional. If not set, the attributes will retain their original values. The `script` attribute is base-64 encoded. New deployments will use the updated script, but this action does not update previously deployed instances."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts/:startup-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts",
										":startup-id"
									],
									"variable": [
										{
											"key": "startup-id",
											"value": "<string>",
											"description": "(Required) The [Startup Script id](#operation/list-startup-scripts)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Startup Scripts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/startup-scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-scripts"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Startup Scripts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"startup_scripts\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\t\"date_modified\": \"2020-10-10T01:59:20+00:00\",\n\t\t\t\"name\": \"Example Startup Script\",\n\t\t\t\"type\": \"pxe\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/startup-scripts?per_page=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Startup Script",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"script\": \"<string>\",\n    \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/startup-scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-scripts"
							]
						},
						"description": "Create a new Startup Script. The `name` and `script` attributes are required, and scripts are base-64 encoded."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"type\": \"pxe\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"startup_script\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"date_created\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"date_modified\": \"2020-10-10T01:56:20+00:00\",\n\t\t\"name\": \"Example Startup Script\",\n\t\t\"type\": \"pxe\",\n\t\t\"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"type\": \"pxe\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"type\": \"pxe\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Startup Script\",\n    \"type\": \"pxe\",\n    \"script\": \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/startup-scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"startup-scripts"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr allows you to assign [two types of scripts to a server](https://www.vultr.com/docs/vultr-startup-scripts-quickstart-guide). Boot scripts configure new deployments, and PXE scripts automatically install operating systems. Assign startup scripts to your servers through the API or on your [Startup Scripts page](https://my.vultr.com/startup/) in the customer portal."
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Get User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:user-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user-id"
							],
							"variable": [
								{
									"key": "user-id",
									"value": "<string>",
									"description": "(Required) The [User id](#operation/list-users)."
								}
							]
						},
						"description": "Get information about a User."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"user\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"email\": \"user@example.com\",\n\t\t\"api_enabled\": true,\n\t\t\"acls\": [\n\t\t\t\"manage_users\",\n\t\t\t\"subscriptions_view\",\n\t\t\t\"subscriptions\",\n\t\t\t\"provisioning\",\n\t\t\t\"billing\",\n\t\t\t\"support\",\n\t\t\t\"abuse\",\n\t\t\t\"dns\",\n\t\t\t\"upgrade\",\n\t\t\t\"objstore\",\n\t\t\t\"loadbalancer\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:user-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user-id"
							],
							"variable": [
								{
									"key": "user-id",
									"value": "<string>",
									"description": "(Required) The [User id](#operation/list-users)."
								}
							]
						},
						"description": "Delete a User."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"api_enabled\": \"<boolean>\",\n    \"acls\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:user-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user-id"
							],
							"variable": [
								{
									"key": "user-id",
									"value": "<string>",
									"description": "(Required) The [User id](#operation/list-users)."
								}
							]
						},
						"description": "Update information for a User. All attributes are optional. If not set, the attributes will retain their original values."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"name\": \"Example User\",\n    \"password\": \"example-password\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"name\": \"Example User\",\n    \"password\": \"example-password\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"name\": \"Example User\",\n    \"password\": \"example-password\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"name\": \"Example User\",\n    \"password\": \"example-password\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"name\": \"Example User\",\n    \"password\": \"example-password\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user-id"
									],
									"variable": [
										{
											"key": "user-id",
											"value": "<string>",
											"description": "(Required) The [User id](#operation/list-users)."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<number>",
									"description": "Number of items requested per page. Default is 100 and Max is 500.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination).",
									"disabled": true
								}
							]
						},
						"description": "Get a list of all Users in your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<number>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<number>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"users\": [\n\t\t{\n\t\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\t\"email\": \"user@example.com\",\n\t\t\t\"api_enabled\": true,\n\t\t\t\"acls\": [\n\t\t\t\t\"manage_users\",\n\t\t\t\t\"subscriptions_view\",\n\t\t\t\t\"subscriptions\",\n\t\t\t\t\"provisioning\",\n\t\t\t\t\"billing\",\n\t\t\t\t\"support\",\n\t\t\t\t\"abuse\",\n\t\t\t\t\"dns\",\n\t\t\t\t\"upgrade\",\n\t\t\t\t\"objstore\",\n\t\t\t\t\"loadbalancer\"\n\t\t\t]\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total\": 1,\n\t\t\"links\": {\n\t\t\t\"next\": \"\",\n\t\t\t\"prev\": \"\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<number>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<number>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<number>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<number>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<number>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<number>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"api_enabled\": \"<boolean>\",\n    \"acls\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new User. The `email`, `name`, and `password` attributes are required."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"sh#sedHA_FTdz6w+\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"user\": {\n\t\t\"id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n\t\t\"name\": \"Example User\",\n\t\t\"email\": \"user@example.com\",\n\t\t\"api_enabled\": true,\n\t\t\"acls\": [\n\t\t\t\"manage_users\",\n\t\t\t\"subscriptions_view\",\n\t\t\t\"subscriptions\",\n\t\t\t\"provisioning\",\n\t\t\t\"billing\",\n\t\t\t\"support\",\n\t\t\t\"abuse\",\n\t\t\t\"dns\",\n\t\t\t\"upgrade\",\n\t\t\t\"objstore\",\n\t\t\t\"loadbalancer\"\n\t\t]\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"sh#sedHA_FTdz6w+\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"sh#sedHA_FTdz6w+\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"sh#sedHA_FTdz6w+\",\n    \"api_enabled\": true,\n    \"acls\": [\n        \"manage_users\",\n        \"subscriptions_view\",\n        \"subscriptions\",\n        \"provisioning\",\n        \"billing\",\n        \"support\",\n        \"abuse\",\n        \"dns\",\n        \"upgrade\",\n        \"objstore\",\n        \"loadbalancer\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Vultr supports [multiple users](https://my.vultr.com/settings/#settingsusers) in each account, and each user has [individual access permissions](https://my.vultr.com/users/manage/?USERID=new). Users have unique API keys, which respect the permission for that user."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.vultr.com/v2",
			"type": "string"
		}
	]
}